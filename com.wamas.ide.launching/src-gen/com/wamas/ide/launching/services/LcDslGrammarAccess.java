/*
 * generated by Xtext 2.28.0
 */
package com.wamas.ide.launching.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LcDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class LCModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.LCModel");
		private final Assignment cConfigurationsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cConfigurationsLaunchConfigParserRuleCall_0 = (RuleCall)cConfigurationsAssignment.eContents().get(0);
		
		///**
		// * TODO: The language is still missing some things that could be set:
		// *
		// * Java:
		// *   - additional classpath entries (low prio)
		// *   - additional source lookup (low prio)
		// *
		// * Eclipse,Rap:
		// *   - config location (low prio)
		// *   - default start level & autostart
		// *
		// * How to support different launch config types - some generic attribute support?
		// * Or really implement support for each type separately (probably the best experience).
		// */
		//LCModel:
		//    configurations+=LaunchConfig*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//configurations+=LaunchConfig*
		public Assignment getConfigurationsAssignment() { return cConfigurationsAssignment; }
		
		//LaunchConfig
		public RuleCall getConfigurationsLaunchConfigParserRuleCall_0() { return cConfigurationsLaunchConfigParserRuleCall_0; }
	}
	public class LaunchConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.LaunchConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cExplicitAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cExplicitExplicitKeyword_0_0_0 = (Keyword)cExplicitAssignment_0_0.eContents().get(0);
		private final Assignment cManualAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final Keyword cManualManualKeyword_0_1_0 = (Keyword)cManualAssignment_0_1.eContents().get(0);
		private final Assignment cAbstractAssignment_0_2 = (Assignment)cUnorderedGroup_0.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_0_2_0 = (Keyword)cAbstractAssignment_0_2.eContents().get(0);
		private final Assignment cForegroundAssignment_0_3 = (Assignment)cUnorderedGroup_0.eContents().get(3);
		private final Keyword cForegroundForegroundKeyword_0_3_0 = (Keyword)cForegroundAssignment_0_3.eContents().get(0);
		private final Assignment cNoConsoleAssignment_0_4 = (Assignment)cUnorderedGroup_0.eContents().get(4);
		private final Keyword cNoConsoleNoConsoleKeyword_0_4_0 = (Keyword)cNoConsoleAssignment_0_4.eContents().get(0);
		private final Assignment cNoValidateAssignment_0_5 = (Assignment)cUnorderedGroup_0.eContents().get(5);
		private final Keyword cNoValidateNoValidateKeyword_0_5_0 = (Keyword)cNoValidateAssignment_0_5.eContents().get(0);
		private final Assignment cSwInstallSupportAssignment_0_6 = (Assignment)cUnorderedGroup_0.eContents().get(6);
		private final Keyword cSwInstallSupportSwInstallAllowedKeyword_0_6_0 = (Keyword)cSwInstallSupportAssignment_0_6.eContents().get(0);
		private final Assignment cReplaceEnvAssignment_0_7 = (Assignment)cUnorderedGroup_0.eContents().get(7);
		private final Keyword cReplaceEnvReplaceEnvKeyword_0_7_0 = (Keyword)cReplaceEnvAssignment_0_7.eContents().get(0);
		private final Assignment cStopInMainAssignment_0_8 = (Assignment)cUnorderedGroup_0.eContents().get(8);
		private final Keyword cStopInMainStopInMainKeyword_0_8_0 = (Keyword)cStopInMainAssignment_0_8.eContents().get(0);
		private final Assignment cKeepRunningAssignment_0_9 = (Assignment)cUnorderedGroup_0.eContents().get(9);
		private final Keyword cKeepRunningKeepRunningKeyword_0_9_0 = (Keyword)cKeepRunningAssignment_0_9.eContents().get(0);
		private final Assignment cRunInUiThreadAssignment_0_10 = (Assignment)cUnorderedGroup_0.eContents().get(10);
		private final Keyword cRunInUiThreadRunInUiThreadKeyword_0_10_0 = (Keyword)cRunInUiThreadAssignment_0_10.eContents().get(0);
		private final Group cGroup_0_11 = (Group)cUnorderedGroup_0.eContents().get(11);
		private final Assignment cQualifyAssignment_0_11_0 = (Assignment)cGroup_0_11.eContents().get(0);
		private final Keyword cQualifyQualifiedKeyword_0_11_0_0 = (Keyword)cQualifyAssignment_0_11_0.eContents().get(0);
		private final Group cGroup_0_11_1 = (Group)cGroup_0_11.eContents().get(1);
		private final RuleCall cBRACKET_OPENTerminalRuleCall_0_11_1_0 = (RuleCall)cGroup_0_11_1.eContents().get(0);
		private final Assignment cQualifierIdAssignment_0_11_1_1 = (Assignment)cGroup_0_11_1.eContents().get(1);
		private final RuleCall cQualifierIdSTRINGTerminalRuleCall_0_11_1_1_0 = (RuleCall)cQualifierIdAssignment_0_11_1_1.eContents().get(0);
		private final RuleCall cBRACKET_CLOSETerminalRuleCall_0_11_1_2 = (RuleCall)cGroup_0_11_1.eContents().get(2);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeLaunchConfigTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Keyword cConfigurationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameFQNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperConfigAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperConfigLaunchConfigCrossReference_4_1_0 = (CrossReference)cSuperConfigAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperConfigLaunchConfigFQNameParserRuleCall_4_1_0_1 = (RuleCall)cSuperConfigLaunchConfigCrossReference_4_1_0.eContents().get(1);
		private final RuleCall cBLOCK_BEGINTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Assignment cClearsAssignment_6_0 = (Assignment)cUnorderedGroup_6.eContents().get(0);
		private final RuleCall cClearsClearOptionParserRuleCall_6_0_0 = (RuleCall)cClearsAssignment_6_0.eContents().get(0);
		private final Assignment cWorkspaceAssignment_6_1 = (Assignment)cUnorderedGroup_6.eContents().get(1);
		private final RuleCall cWorkspaceWorkspaceParserRuleCall_6_1_0 = (RuleCall)cWorkspaceAssignment_6_1.eContents().get(0);
		private final Assignment cWorkingDirAssignment_6_2 = (Assignment)cUnorderedGroup_6.eContents().get(2);
		private final RuleCall cWorkingDirWorkingDirParserRuleCall_6_2_0 = (RuleCall)cWorkingDirAssignment_6_2.eContents().get(0);
		private final Assignment cMemoryAssignment_6_3 = (Assignment)cUnorderedGroup_6.eContents().get(3);
		private final RuleCall cMemoryMemoryOptionParserRuleCall_6_3_0 = (RuleCall)cMemoryAssignment_6_3.eContents().get(0);
		private final Assignment cMainProjectAssignment_6_4 = (Assignment)cUnorderedGroup_6.eContents().get(4);
		private final RuleCall cMainProjectMainProjectParserRuleCall_6_4_0 = (RuleCall)cMainProjectAssignment_6_4.eContents().get(0);
		private final Assignment cMainTypeAssignment_6_5 = (Assignment)cUnorderedGroup_6.eContents().get(5);
		private final RuleCall cMainTypeMainTypeParserRuleCall_6_5_0 = (RuleCall)cMainTypeAssignment_6_5.eContents().get(0);
		private final Assignment cApplicationAssignment_6_6 = (Assignment)cUnorderedGroup_6.eContents().get(6);
		private final RuleCall cApplicationApplicationExtPointParserRuleCall_6_6_0 = (RuleCall)cApplicationAssignment_6_6.eContents().get(0);
		private final Assignment cProductAssignment_6_7 = (Assignment)cUnorderedGroup_6.eContents().get(7);
		private final RuleCall cProductProductExtPointParserRuleCall_6_7_0 = (RuleCall)cProductAssignment_6_7.eContents().get(0);
		private final Assignment cFavoritesAssignment_6_8 = (Assignment)cUnorderedGroup_6.eContents().get(8);
		private final RuleCall cFavoritesFavoritesParserRuleCall_6_8_0 = (RuleCall)cFavoritesAssignment_6_8.eContents().get(0);
		private final Assignment cRedirectAssignment_6_9 = (Assignment)cUnorderedGroup_6.eContents().get(9);
		private final RuleCall cRedirectRedirectParserRuleCall_6_9_0 = (RuleCall)cRedirectAssignment_6_9.eContents().get(0);
		private final Assignment cExecEnvAssignment_6_10 = (Assignment)cUnorderedGroup_6.eContents().get(10);
		private final RuleCall cExecEnvExecutionEnvironmentParserRuleCall_6_10_0 = (RuleCall)cExecEnvAssignment_6_10.eContents().get(0);
		private final Assignment cConfigIniTemplateAssignment_6_11 = (Assignment)cUnorderedGroup_6.eContents().get(11);
		private final RuleCall cConfigIniTemplateConfigIniTemplateParserRuleCall_6_11_0 = (RuleCall)cConfigIniTemplateAssignment_6_11.eContents().get(0);
		private final Assignment cJavaMainSearchAssignment_6_12 = (Assignment)cUnorderedGroup_6.eContents().get(12);
		private final RuleCall cJavaMainSearchJavaMainSearchParserRuleCall_6_12_0 = (RuleCall)cJavaMainSearchAssignment_6_12.eContents().get(0);
		private final Assignment cServletConfigAssignment_6_13 = (Assignment)cUnorderedGroup_6.eContents().get(13);
		private final RuleCall cServletConfigRapServletConfigParserRuleCall_6_13_0 = (RuleCall)cServletConfigAssignment_6_13.eContents().get(0);
		private final Assignment cContentProviderProductAssignment_6_14 = (Assignment)cUnorderedGroup_6.eContents().get(14);
		private final RuleCall cContentProviderProductContentProviderProductParserRuleCall_6_14_0 = (RuleCall)cContentProviderProductAssignment_6_14.eContents().get(0);
		private final Assignment cTestAssignment_6_15 = (Assignment)cUnorderedGroup_6.eContents().get(15);
		private final RuleCall cTestTestConfigParserRuleCall_6_15_0 = (RuleCall)cTestAssignment_6_15.eContents().get(0);
		private final Assignment cPluginsAssignment_6_16 = (Assignment)cUnorderedGroup_6.eContents().get(16);
		private final RuleCall cPluginsAddPluginParserRuleCall_6_16_0 = (RuleCall)cPluginsAssignment_6_16.eContents().get(0);
		private final Assignment cFeaturesAssignment_6_17 = (Assignment)cUnorderedGroup_6.eContents().get(17);
		private final RuleCall cFeaturesAddFeatureParserRuleCall_6_17_0 = (RuleCall)cFeaturesAssignment_6_17.eContents().get(0);
		private final Assignment cIgnoreAssignment_6_18 = (Assignment)cUnorderedGroup_6.eContents().get(18);
		private final RuleCall cIgnoreIgnorePluginParserRuleCall_6_18_0 = (RuleCall)cIgnoreAssignment_6_18.eContents().get(0);
		private final Assignment cGroupMembersAssignment_6_19 = (Assignment)cUnorderedGroup_6.eContents().get(19);
		private final RuleCall cGroupMembersGroupMemberParserRuleCall_6_19_0 = (RuleCall)cGroupMembersAssignment_6_19.eContents().get(0);
		private final Assignment cVmArgsAssignment_6_20 = (Assignment)cUnorderedGroup_6.eContents().get(20);
		private final RuleCall cVmArgsVmArgumentParserRuleCall_6_20_0 = (RuleCall)cVmArgsAssignment_6_20.eContents().get(0);
		private final Assignment cProgArgsAssignment_6_21 = (Assignment)cUnorderedGroup_6.eContents().get(21);
		private final RuleCall cProgArgsProgramArgumentParserRuleCall_6_21_0 = (RuleCall)cProgArgsAssignment_6_21.eContents().get(0);
		private final Assignment cEnvVarsAssignment_6_22 = (Assignment)cUnorderedGroup_6.eContents().get(22);
		private final RuleCall cEnvVarsEnvironmentVariableParserRuleCall_6_22_0 = (RuleCall)cEnvVarsAssignment_6_22.eContents().get(0);
		private final Assignment cTracesAssignment_6_23 = (Assignment)cUnorderedGroup_6.eContents().get(23);
		private final RuleCall cTracesTraceEnablementParserRuleCall_6_23_0 = (RuleCall)cTracesAssignment_6_23.eContents().get(0);
		private final RuleCall cBLOCK_ENDTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		///**
		// * explicit = explicitly defined plug-in list. no auto-resolve of plug-ins.
		// * manual = manually generated through context menu only. no automatic build.
		// * foreground = don't launch in background, but rather block
		// * no-console = don't allocate a console (no stdin then)
		// * no-validate = don't validate plugins prior to launch
		// * sw-install-allowed = allow software installation in eclipse config
		// * replace-env = replace environment instead of appending variables
		// */
		//LaunchConfig:
		//    ((explicit?='explicit')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (manual?='manual')? // All
		//        & (abstract?='abstract')? // All
		//        & (foreground?='foreground')? // All
		//        & (noConsole?='no-console')? // All but Groups
		//        & (noValidate?='no-validate')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (swInstallSupport?='sw-install-allowed')? // Eclipse, JUnit-Plugin, SWTBot
		//        & (replaceEnv?='replace-env')? // All but Groups
		//        & (stopInMain?='stop-in-main')? // Java
		//        & (keepRunning?='keep-running')? // JUnit-Plugin, SWTBot
		//        & (runInUiThread?='run-in-ui-thread')? // JUnit-Plugin
		//        & (qualify?='qualified' (BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?)? // All - naming
		//    ) type=LaunchConfigType 'configuration' name=FQName
		//    (':' superConfig=[LaunchConfig|FQName])? BLOCK_BEGIN
		//        ( // things that may appear only once
		//            (clears=ClearOption)? // Eclipse, JUnit-Plugin, SWTBot, RAP (partial)
		//            & (workspace=Workspace)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//            & (workingDir=WorkingDir)? // All but Groups
		//            & (memory=MemoryOption)? // All but Groups
		//            & (mainProject=MainProject)? // Java, JUnit-Plugin, SWTBot
		//            & (mainType=MainType)? // Java
		//            & (application=ApplicationExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//            & (product=ProductExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//            & (favorites=Favorites)? // All
		//            & (redirect=Redirect)? // All but Groups
		//            & (execEnv=ExecutionEnvironment)? // All but Groups
		//            & (configIniTemplate=ConfigIniTemplate)? // Eclipse, JUnit-Plugin, SWTBot
		//            & (javaMainSearch=JavaMainSearch)? // Java
		//            & (servletConfig=RapServletConfig)? // RAP
		//            & (contentProviderProduct=ContentProviderProduct)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//            & (test=TestConfig)? // JUnit-Plugin, SWTBot
		//            // things that may appear multiple times
		//            & (plugins+=AddPlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//            & (features+=AddFeature)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//            & (ignore+=IgnorePlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//            & (groupMembers+=GroupMember)* // Groups                     // TODO: content assist, validation, update on rename
		//            & (vmArgs+=VmArgument)* // All but Groups
		//            & (progArgs+=ProgramArgument)* // All but Groups
		//            & (envVars+=EnvironmentVariable)* // All but Groups
		//            & (traces+=TraceEnablement)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        )
		//    BLOCK_END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//((explicit?='explicit')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (manual?='manual')? // All
		//    & (abstract?='abstract')? // All
		//    & (foreground?='foreground')? // All
		//    & (noConsole?='no-console')? // All but Groups
		//    & (noValidate?='no-validate')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (swInstallSupport?='sw-install-allowed')? // Eclipse, JUnit-Plugin, SWTBot
		//    & (replaceEnv?='replace-env')? // All but Groups
		//    & (stopInMain?='stop-in-main')? // Java
		//    & (keepRunning?='keep-running')? // JUnit-Plugin, SWTBot
		//    & (runInUiThread?='run-in-ui-thread')? // JUnit-Plugin
		//    & (qualify?='qualified' (BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?)? // All - naming
		//) type=LaunchConfigType 'configuration' name=FQName
		//(':' superConfig=[LaunchConfig|FQName])? BLOCK_BEGIN
		//    ( // things that may appear only once
		//        (clears=ClearOption)? // Eclipse, JUnit-Plugin, SWTBot, RAP (partial)
		//        & (workspace=Workspace)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (workingDir=WorkingDir)? // All but Groups
		//        & (memory=MemoryOption)? // All but Groups
		//        & (mainProject=MainProject)? // Java, JUnit-Plugin, SWTBot
		//        & (mainType=MainType)? // Java
		//        & (application=ApplicationExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//        & (product=ProductExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//        & (favorites=Favorites)? // All
		//        & (redirect=Redirect)? // All but Groups
		//        & (execEnv=ExecutionEnvironment)? // All but Groups
		//        & (configIniTemplate=ConfigIniTemplate)? // Eclipse, JUnit-Plugin, SWTBot
		//        & (javaMainSearch=JavaMainSearch)? // Java
		//        & (servletConfig=RapServletConfig)? // RAP
		//        & (contentProviderProduct=ContentProviderProduct)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (test=TestConfig)? // JUnit-Plugin, SWTBot
		//        // things that may appear multiple times
		//        & (plugins+=AddPlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (features+=AddFeature)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (ignore+=IgnorePlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//        & (groupMembers+=GroupMember)* // Groups                     // TODO: content assist, validation, update on rename
		//        & (vmArgs+=VmArgument)* // All but Groups
		//        & (progArgs+=ProgramArgument)* // All but Groups
		//        & (envVars+=EnvironmentVariable)* // All but Groups
		//        & (traces+=TraceEnablement)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    )
		//BLOCK_END
		public Group getGroup() { return cGroup; }
		
		//((explicit?='explicit')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (manual?='manual')? // All
		//    & (abstract?='abstract')? // All
		//    & (foreground?='foreground')? // All
		//    & (noConsole?='no-console')? // All but Groups
		//    & (noValidate?='no-validate')? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (swInstallSupport?='sw-install-allowed')? // Eclipse, JUnit-Plugin, SWTBot
		//    & (replaceEnv?='replace-env')? // All but Groups
		//    & (stopInMain?='stop-in-main')? // Java
		//    & (keepRunning?='keep-running')? // JUnit-Plugin, SWTBot
		//    & (runInUiThread?='run-in-ui-thread')? // JUnit-Plugin
		//    & (qualify?='qualified' (BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?)? // All - naming
		//)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//(explicit?='explicit')?
		public Assignment getExplicitAssignment_0_0() { return cExplicitAssignment_0_0; }
		
		//'explicit'
		public Keyword getExplicitExplicitKeyword_0_0_0() { return cExplicitExplicitKeyword_0_0_0; }
		
		//(manual?='manual')?
		public Assignment getManualAssignment_0_1() { return cManualAssignment_0_1; }
		
		//'manual'
		public Keyword getManualManualKeyword_0_1_0() { return cManualManualKeyword_0_1_0; }
		
		//(abstract?='abstract')?
		public Assignment getAbstractAssignment_0_2() { return cAbstractAssignment_0_2; }
		
		//'abstract'
		public Keyword getAbstractAbstractKeyword_0_2_0() { return cAbstractAbstractKeyword_0_2_0; }
		
		//(foreground?='foreground')?
		public Assignment getForegroundAssignment_0_3() { return cForegroundAssignment_0_3; }
		
		//'foreground'
		public Keyword getForegroundForegroundKeyword_0_3_0() { return cForegroundForegroundKeyword_0_3_0; }
		
		//(noConsole?='no-console')?
		public Assignment getNoConsoleAssignment_0_4() { return cNoConsoleAssignment_0_4; }
		
		//'no-console'
		public Keyword getNoConsoleNoConsoleKeyword_0_4_0() { return cNoConsoleNoConsoleKeyword_0_4_0; }
		
		//(noValidate?='no-validate')?
		public Assignment getNoValidateAssignment_0_5() { return cNoValidateAssignment_0_5; }
		
		//'no-validate'
		public Keyword getNoValidateNoValidateKeyword_0_5_0() { return cNoValidateNoValidateKeyword_0_5_0; }
		
		//(swInstallSupport?='sw-install-allowed')?
		public Assignment getSwInstallSupportAssignment_0_6() { return cSwInstallSupportAssignment_0_6; }
		
		//'sw-install-allowed'
		public Keyword getSwInstallSupportSwInstallAllowedKeyword_0_6_0() { return cSwInstallSupportSwInstallAllowedKeyword_0_6_0; }
		
		//(replaceEnv?='replace-env')?
		public Assignment getReplaceEnvAssignment_0_7() { return cReplaceEnvAssignment_0_7; }
		
		//'replace-env'
		public Keyword getReplaceEnvReplaceEnvKeyword_0_7_0() { return cReplaceEnvReplaceEnvKeyword_0_7_0; }
		
		//(stopInMain?='stop-in-main')?
		public Assignment getStopInMainAssignment_0_8() { return cStopInMainAssignment_0_8; }
		
		//'stop-in-main'
		public Keyword getStopInMainStopInMainKeyword_0_8_0() { return cStopInMainStopInMainKeyword_0_8_0; }
		
		//(keepRunning?='keep-running')?
		public Assignment getKeepRunningAssignment_0_9() { return cKeepRunningAssignment_0_9; }
		
		//'keep-running'
		public Keyword getKeepRunningKeepRunningKeyword_0_9_0() { return cKeepRunningKeepRunningKeyword_0_9_0; }
		
		//(runInUiThread?='run-in-ui-thread')?
		public Assignment getRunInUiThreadAssignment_0_10() { return cRunInUiThreadAssignment_0_10; }
		
		//'run-in-ui-thread'
		public Keyword getRunInUiThreadRunInUiThreadKeyword_0_10_0() { return cRunInUiThreadRunInUiThreadKeyword_0_10_0; }
		
		//(qualify?='qualified' (BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?)?
		public Group getGroup_0_11() { return cGroup_0_11; }
		
		//qualify?='qualified'
		public Assignment getQualifyAssignment_0_11_0() { return cQualifyAssignment_0_11_0; }
		
		//'qualified'
		public Keyword getQualifyQualifiedKeyword_0_11_0_0() { return cQualifyQualifiedKeyword_0_11_0_0; }
		
		//(BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?
		public Group getGroup_0_11_1() { return cGroup_0_11_1; }
		
		//BRACKET_OPEN
		public RuleCall getBRACKET_OPENTerminalRuleCall_0_11_1_0() { return cBRACKET_OPENTerminalRuleCall_0_11_1_0; }
		
		//qualifierId=STRING
		public Assignment getQualifierIdAssignment_0_11_1_1() { return cQualifierIdAssignment_0_11_1_1; }
		
		//STRING
		public RuleCall getQualifierIdSTRINGTerminalRuleCall_0_11_1_1_0() { return cQualifierIdSTRINGTerminalRuleCall_0_11_1_1_0; }
		
		//BRACKET_CLOSE
		public RuleCall getBRACKET_CLOSETerminalRuleCall_0_11_1_2() { return cBRACKET_CLOSETerminalRuleCall_0_11_1_2; }
		
		//type=LaunchConfigType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//LaunchConfigType
		public RuleCall getTypeLaunchConfigTypeEnumRuleCall_1_0() { return cTypeLaunchConfigTypeEnumRuleCall_1_0; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_2() { return cConfigurationKeyword_2; }
		
		//name=FQName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_3_0() { return cNameFQNameParserRuleCall_3_0; }
		
		//(':' superConfig=[LaunchConfig|FQName])?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//superConfig=[LaunchConfig|FQName]
		public Assignment getSuperConfigAssignment_4_1() { return cSuperConfigAssignment_4_1; }
		
		//[LaunchConfig|FQName]
		public CrossReference getSuperConfigLaunchConfigCrossReference_4_1_0() { return cSuperConfigLaunchConfigCrossReference_4_1_0; }
		
		//FQName
		public RuleCall getSuperConfigLaunchConfigFQNameParserRuleCall_4_1_0_1() { return cSuperConfigLaunchConfigFQNameParserRuleCall_4_1_0_1; }
		
		//BLOCK_BEGIN
		public RuleCall getBLOCK_BEGINTerminalRuleCall_5() { return cBLOCK_BEGINTerminalRuleCall_5; }
		
		//( // things that may appear only once
		//    (clears=ClearOption)? // Eclipse, JUnit-Plugin, SWTBot, RAP (partial)
		//    & (workspace=Workspace)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (workingDir=WorkingDir)? // All but Groups
		//    & (memory=MemoryOption)? // All but Groups
		//    & (mainProject=MainProject)? // Java, JUnit-Plugin, SWTBot
		//    & (mainType=MainType)? // Java
		//    & (application=ApplicationExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//    & (product=ProductExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
		//    & (favorites=Favorites)? // All
		//    & (redirect=Redirect)? // All but Groups
		//    & (execEnv=ExecutionEnvironment)? // All but Groups
		//    & (configIniTemplate=ConfigIniTemplate)? // Eclipse, JUnit-Plugin, SWTBot
		//    & (javaMainSearch=JavaMainSearch)? // Java
		//    & (servletConfig=RapServletConfig)? // RAP
		//    & (contentProviderProduct=ContentProviderProduct)? // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (test=TestConfig)? // JUnit-Plugin, SWTBot
		//    // things that may appear multiple times
		//    & (plugins+=AddPlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (features+=AddFeature)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (ignore+=IgnorePlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//    & (groupMembers+=GroupMember)* // Groups                     // TODO: content assist, validation, update on rename
		//    & (vmArgs+=VmArgument)* // All but Groups
		//    & (progArgs+=ProgramArgument)* // All but Groups
		//    & (envVars+=EnvironmentVariable)* // All but Groups
		//    & (traces+=TraceEnablement)* // Eclipse, JUnit-Plugin, SWTBot, RAP
		//)
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }
		
		//// things that may appear only once
		//           (clears=ClearOption)?
		public Assignment getClearsAssignment_6_0() { return cClearsAssignment_6_0; }
		
		//ClearOption
		public RuleCall getClearsClearOptionParserRuleCall_6_0_0() { return cClearsClearOptionParserRuleCall_6_0_0; }
		
		//(workspace=Workspace)?
		public Assignment getWorkspaceAssignment_6_1() { return cWorkspaceAssignment_6_1; }
		
		//Workspace
		public RuleCall getWorkspaceWorkspaceParserRuleCall_6_1_0() { return cWorkspaceWorkspaceParserRuleCall_6_1_0; }
		
		//(workingDir=WorkingDir)?
		public Assignment getWorkingDirAssignment_6_2() { return cWorkingDirAssignment_6_2; }
		
		//WorkingDir
		public RuleCall getWorkingDirWorkingDirParserRuleCall_6_2_0() { return cWorkingDirWorkingDirParserRuleCall_6_2_0; }
		
		//(memory=MemoryOption)?
		public Assignment getMemoryAssignment_6_3() { return cMemoryAssignment_6_3; }
		
		//MemoryOption
		public RuleCall getMemoryMemoryOptionParserRuleCall_6_3_0() { return cMemoryMemoryOptionParserRuleCall_6_3_0; }
		
		//(mainProject=MainProject)?
		public Assignment getMainProjectAssignment_6_4() { return cMainProjectAssignment_6_4; }
		
		//MainProject
		public RuleCall getMainProjectMainProjectParserRuleCall_6_4_0() { return cMainProjectMainProjectParserRuleCall_6_4_0; }
		
		//(mainType=MainType)?
		public Assignment getMainTypeAssignment_6_5() { return cMainTypeAssignment_6_5; }
		
		//MainType
		public RuleCall getMainTypeMainTypeParserRuleCall_6_5_0() { return cMainTypeMainTypeParserRuleCall_6_5_0; }
		
		//(application=ApplicationExtPoint)?
		public Assignment getApplicationAssignment_6_6() { return cApplicationAssignment_6_6; }
		
		//ApplicationExtPoint
		public RuleCall getApplicationApplicationExtPointParserRuleCall_6_6_0() { return cApplicationApplicationExtPointParserRuleCall_6_6_0; }
		
		//(product=ProductExtPoint)?
		public Assignment getProductAssignment_6_7() { return cProductAssignment_6_7; }
		
		//ProductExtPoint
		public RuleCall getProductProductExtPointParserRuleCall_6_7_0() { return cProductProductExtPointParserRuleCall_6_7_0; }
		
		//(favorites=Favorites)?
		public Assignment getFavoritesAssignment_6_8() { return cFavoritesAssignment_6_8; }
		
		//Favorites
		public RuleCall getFavoritesFavoritesParserRuleCall_6_8_0() { return cFavoritesFavoritesParserRuleCall_6_8_0; }
		
		//(redirect=Redirect)?
		public Assignment getRedirectAssignment_6_9() { return cRedirectAssignment_6_9; }
		
		//Redirect
		public RuleCall getRedirectRedirectParserRuleCall_6_9_0() { return cRedirectRedirectParserRuleCall_6_9_0; }
		
		//(execEnv=ExecutionEnvironment)?
		public Assignment getExecEnvAssignment_6_10() { return cExecEnvAssignment_6_10; }
		
		//ExecutionEnvironment
		public RuleCall getExecEnvExecutionEnvironmentParserRuleCall_6_10_0() { return cExecEnvExecutionEnvironmentParserRuleCall_6_10_0; }
		
		//(configIniTemplate=ConfigIniTemplate)?
		public Assignment getConfigIniTemplateAssignment_6_11() { return cConfigIniTemplateAssignment_6_11; }
		
		//ConfigIniTemplate
		public RuleCall getConfigIniTemplateConfigIniTemplateParserRuleCall_6_11_0() { return cConfigIniTemplateConfigIniTemplateParserRuleCall_6_11_0; }
		
		//(javaMainSearch=JavaMainSearch)?
		public Assignment getJavaMainSearchAssignment_6_12() { return cJavaMainSearchAssignment_6_12; }
		
		//JavaMainSearch
		public RuleCall getJavaMainSearchJavaMainSearchParserRuleCall_6_12_0() { return cJavaMainSearchJavaMainSearchParserRuleCall_6_12_0; }
		
		//(servletConfig=RapServletConfig)?
		public Assignment getServletConfigAssignment_6_13() { return cServletConfigAssignment_6_13; }
		
		//RapServletConfig
		public RuleCall getServletConfigRapServletConfigParserRuleCall_6_13_0() { return cServletConfigRapServletConfigParserRuleCall_6_13_0; }
		
		//(contentProviderProduct=ContentProviderProduct)?
		public Assignment getContentProviderProductAssignment_6_14() { return cContentProviderProductAssignment_6_14; }
		
		//ContentProviderProduct
		public RuleCall getContentProviderProductContentProviderProductParserRuleCall_6_14_0() { return cContentProviderProductContentProviderProductParserRuleCall_6_14_0; }
		
		//(test=TestConfig)?
		public Assignment getTestAssignment_6_15() { return cTestAssignment_6_15; }
		
		//TestConfig
		public RuleCall getTestTestConfigParserRuleCall_6_15_0() { return cTestTestConfigParserRuleCall_6_15_0; }
		
		//(plugins+=AddPlugin)*
		public Assignment getPluginsAssignment_6_16() { return cPluginsAssignment_6_16; }
		
		//AddPlugin
		public RuleCall getPluginsAddPluginParserRuleCall_6_16_0() { return cPluginsAddPluginParserRuleCall_6_16_0; }
		
		//(features+=AddFeature)*
		public Assignment getFeaturesAssignment_6_17() { return cFeaturesAssignment_6_17; }
		
		//AddFeature
		public RuleCall getFeaturesAddFeatureParserRuleCall_6_17_0() { return cFeaturesAddFeatureParserRuleCall_6_17_0; }
		
		//(ignore+=IgnorePlugin)*
		public Assignment getIgnoreAssignment_6_18() { return cIgnoreAssignment_6_18; }
		
		//IgnorePlugin
		public RuleCall getIgnoreIgnorePluginParserRuleCall_6_18_0() { return cIgnoreIgnorePluginParserRuleCall_6_18_0; }
		
		//(groupMembers+=GroupMember)*
		public Assignment getGroupMembersAssignment_6_19() { return cGroupMembersAssignment_6_19; }
		
		//GroupMember
		public RuleCall getGroupMembersGroupMemberParserRuleCall_6_19_0() { return cGroupMembersGroupMemberParserRuleCall_6_19_0; }
		
		//(vmArgs+=VmArgument)*
		public Assignment getVmArgsAssignment_6_20() { return cVmArgsAssignment_6_20; }
		
		//VmArgument
		public RuleCall getVmArgsVmArgumentParserRuleCall_6_20_0() { return cVmArgsVmArgumentParserRuleCall_6_20_0; }
		
		//(progArgs+=ProgramArgument)*
		public Assignment getProgArgsAssignment_6_21() { return cProgArgsAssignment_6_21; }
		
		//ProgramArgument
		public RuleCall getProgArgsProgramArgumentParserRuleCall_6_21_0() { return cProgArgsProgramArgumentParserRuleCall_6_21_0; }
		
		//(envVars+=EnvironmentVariable)*
		public Assignment getEnvVarsAssignment_6_22() { return cEnvVarsAssignment_6_22; }
		
		//EnvironmentVariable
		public RuleCall getEnvVarsEnvironmentVariableParserRuleCall_6_22_0() { return cEnvVarsEnvironmentVariableParserRuleCall_6_22_0; }
		
		//(traces+=TraceEnablement)*
		public Assignment getTracesAssignment_6_23() { return cTracesAssignment_6_23; }
		
		//TraceEnablement
		public RuleCall getTracesTraceEnablementParserRuleCall_6_23_0() { return cTracesTraceEnablementParserRuleCall_6_23_0; }
		
		//BLOCK_END
		public RuleCall getBLOCK_ENDTerminalRuleCall_7() { return cBLOCK_ENDTerminalRuleCall_7; }
	}
	public class WorkspaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Workspace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkspaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cWorkspaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWorkspaceAnyPathParserRuleCall_1_0 = (RuleCall)cWorkspaceAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Workspace:
		//    'workspace' workspace=AnyPath ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'workspace' workspace=AnyPath ';'
		public Group getGroup() { return cGroup; }
		
		//'workspace'
		public Keyword getWorkspaceKeyword_0() { return cWorkspaceKeyword_0; }
		
		//workspace=AnyPath
		public Assignment getWorkspaceAssignment_1() { return cWorkspaceAssignment_1; }
		
		//AnyPath
		public RuleCall getWorkspaceAnyPathParserRuleCall_1_0() { return cWorkspaceAnyPathParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class WorkingDirElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.WorkingDir");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkingDirKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cWorkingDirAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWorkingDirExistingPathParserRuleCall_1_0 = (RuleCall)cWorkingDirAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//WorkingDir:
		//    'working-dir' workingDir=ExistingPath ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'working-dir' workingDir=ExistingPath ';'
		public Group getGroup() { return cGroup; }
		
		//'working-dir'
		public Keyword getWorkingDirKeyword_0() { return cWorkingDirKeyword_0; }
		
		//workingDir=ExistingPath
		public Assignment getWorkingDirAssignment_1() { return cWorkingDirAssignment_1; }
		
		//ExistingPath
		public RuleCall getWorkingDirExistingPathParserRuleCall_1_0() { return cWorkingDirExistingPathParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class MainProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.MainProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cSelfAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cSelfSelfKeyword_1_0_0 = (Keyword)cSelfAssignment_1_0.eContents().get(0);
		private final Assignment cProjectAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cProjectProjectParserRuleCall_1_1_0 = (RuleCall)cProjectAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//MainProject:
		//    'project' (self?='self'|project=Project) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'project' (self?='self'|project=Project) ';'
		public Group getGroup() { return cGroup; }
		
		//'project'
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }
		
		//(self?='self'|project=Project)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//self?='self'
		public Assignment getSelfAssignment_1_0() { return cSelfAssignment_1_0; }
		
		//'self'
		public Keyword getSelfSelfKeyword_1_0_0() { return cSelfSelfKeyword_1_0_0; }
		
		//project=Project
		public Assignment getProjectAssignment_1_1() { return cProjectAssignment_1_1; }
		
		//Project
		public RuleCall getProjectProjectParserRuleCall_1_1_0() { return cProjectProjectParserRuleCall_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class MainTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.MainType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMainClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMainClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMainClassJavaMainTypeParserRuleCall_1_0 = (RuleCall)cMainClassAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//MainType:
		//    'main-class' mainClass=JavaMainType ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'main-class' mainClass=JavaMainType ';'
		public Group getGroup() { return cGroup; }
		
		//'main-class'
		public Keyword getMainClassKeyword_0() { return cMainClassKeyword_0; }
		
		//mainClass=JavaMainType
		public Assignment getMainClassAssignment_1() { return cMainClassAssignment_1; }
		
		//JavaMainType
		public RuleCall getMainClassJavaMainTypeParserRuleCall_1_0() { return cMainClassJavaMainTypeParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class AddPluginElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.AddPlugin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Keyword cPluginKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPluginAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPluginPluginWithVersionAndStartLevelParserRuleCall_2_0 = (RuleCall)cPluginAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AddPlugin:
		//    (optional?='optional')? 'plugin' plugin=PluginWithVersionAndStartLevel ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(optional?='optional')? 'plugin' plugin=PluginWithVersionAndStartLevel ';'
		public Group getGroup() { return cGroup; }
		
		//(optional?='optional')?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//'plugin'
		public Keyword getPluginKeyword_1() { return cPluginKeyword_1; }
		
		//plugin=PluginWithVersionAndStartLevel
		public Assignment getPluginAssignment_2() { return cPluginAssignment_2; }
		
		//PluginWithVersionAndStartLevel
		public RuleCall getPluginPluginWithVersionAndStartLevelParserRuleCall_2_0() { return cPluginPluginWithVersionAndStartLevelParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class AddFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.AddFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFeatureFeatureWithVersionParserRuleCall_2_0 = (RuleCall)cFeatureAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AddFeature:
		//    (optional?='optional')? 'feature' feature=FeatureWithVersion ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(optional?='optional')? 'feature' feature=FeatureWithVersion ';'
		public Group getGroup() { return cGroup; }
		
		//(optional?='optional')?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1() { return cFeatureKeyword_1; }
		
		//feature=FeatureWithVersion
		public Assignment getFeatureAssignment_2() { return cFeatureAssignment_2; }
		
		//FeatureWithVersion
		public RuleCall getFeatureFeatureWithVersionParserRuleCall_2_0() { return cFeatureFeatureWithVersionParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ContentProviderProductElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ContentProviderProduct");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContentProviderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cProductAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cProductExistingPathParserRuleCall_1_0 = (RuleCall)cProductAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ContentProviderProduct:
		//    'content-provider' product=ExistingPath ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'content-provider' product=ExistingPath ';'
		public Group getGroup() { return cGroup; }
		
		//'content-provider'
		public Keyword getContentProviderKeyword_0() { return cContentProviderKeyword_0; }
		
		//product=ExistingPath
		public Assignment getProductAssignment_1() { return cProductAssignment_1; }
		
		//ExistingPath
		public RuleCall getProductExistingPathParserRuleCall_1_0() { return cProductExistingPathParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class IgnorePluginElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.IgnorePlugin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIgnoreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPluginAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPluginPluginWithVersionParserRuleCall_1_0 = (RuleCall)cPluginAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//IgnorePlugin:
		//    'ignore' plugin=PluginWithVersion ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ignore' plugin=PluginWithVersion ';'
		public Group getGroup() { return cGroup; }
		
		//'ignore'
		public Keyword getIgnoreKeyword_0() { return cIgnoreKeyword_0; }
		
		//plugin=PluginWithVersion
		public Assignment getPluginAssignment_1() { return cPluginAssignment_1; }
		
		//PluginWithVersion
		public RuleCall getPluginPluginWithVersionParserRuleCall_1_0() { return cPluginPluginWithVersionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class VmArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.VmArgument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVmArgumentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVmArgumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgumentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgumentsStringWithVariablesParserRuleCall_2_0 = (RuleCall)cArgumentsAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//VmArgument:
		//    {VmArgument} 'vm-argument' (arguments+=StringWithVariables)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{VmArgument} 'vm-argument' (arguments+=StringWithVariables)* ';'
		public Group getGroup() { return cGroup; }
		
		//{VmArgument}
		public Action getVmArgumentAction_0() { return cVmArgumentAction_0; }
		
		//'vm-argument'
		public Keyword getVmArgumentKeyword_1() { return cVmArgumentKeyword_1; }
		
		//(arguments+=StringWithVariables)*
		public Assignment getArgumentsAssignment_2() { return cArgumentsAssignment_2; }
		
		//StringWithVariables
		public RuleCall getArgumentsStringWithVariablesParserRuleCall_2_0() { return cArgumentsStringWithVariablesParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ProgramArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ProgramArgument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProgramArgumentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArgumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgumentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgumentsStringWithVariablesParserRuleCall_2_0 = (RuleCall)cArgumentsAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ProgramArgument:
		//    {ProgramArgument} 'argument' (arguments+=StringWithVariables)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ProgramArgument} 'argument' (arguments+=StringWithVariables)* ';'
		public Group getGroup() { return cGroup; }
		
		//{ProgramArgument}
		public Action getProgramArgumentAction_0() { return cProgramArgumentAction_0; }
		
		//'argument'
		public Keyword getArgumentKeyword_1() { return cArgumentKeyword_1; }
		
		//(arguments+=StringWithVariables)*
		public Assignment getArgumentsAssignment_2() { return cArgumentsAssignment_2; }
		
		//StringWithVariables
		public RuleCall getArgumentsStringWithVariablesParserRuleCall_2_0() { return cArgumentsStringWithVariablesParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class EnvironmentVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.EnvironmentVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cEQTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueStringWithVariablesParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EnvironmentVariable:
		//    {EnvironmentVariable} 'environment' name=ID EQ value=StringWithVariables ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentVariable} 'environment' name=ID EQ value=StringWithVariables ';'
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentVariable}
		public Action getEnvironmentVariableAction_0() { return cEnvironmentVariableAction_0; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_1() { return cEnvironmentKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//EQ
		public RuleCall getEQTerminalRuleCall_3() { return cEQTerminalRuleCall_3; }
		
		//value=StringWithVariables
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//StringWithVariables
		public RuleCall getValueStringWithVariablesParserRuleCall_4_0() { return cValueStringWithVariablesParserRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ApplicationExtPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ApplicationExtPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ApplicationExtPoint:
		//    'application' name = FQName ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'application' name = FQName ';'
		public Group getGroup() { return cGroup; }
		
		//'application'
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }
		
		//name = FQName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_1_0() { return cNameFQNameParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ProductExtPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ProductExtPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProductKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ProductExtPoint:
		//    'product' name = FQName ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'product' name = FQName ';'
		public Group getGroup() { return cGroup; }
		
		//'product'
		public Keyword getProductKeyword_0() { return cProductKeyword_0; }
		
		//name = FQName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_1_0() { return cNameFQNameParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class FavoritesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Favorites");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFavoritesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFavoriteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypesLaunchModeTypeEnumRuleCall_2_0 = (RuleCall)cTypesAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Favorites:
		//    {Favorites} 'favorite' (types+=LaunchModeType)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Favorites} 'favorite' (types+=LaunchModeType)* ';'
		public Group getGroup() { return cGroup; }
		
		//{Favorites}
		public Action getFavoritesAction_0() { return cFavoritesAction_0; }
		
		//'favorite'
		public Keyword getFavoriteKeyword_1() { return cFavoriteKeyword_1; }
		
		//(types+=LaunchModeType)*
		public Assignment getTypesAssignment_2() { return cTypesAssignment_2; }
		
		//LaunchModeType
		public RuleCall getTypesLaunchModeTypeEnumRuleCall_2_0() { return cTypesLaunchModeTypeEnumRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class RedirectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Redirect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRedirectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRedirectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Assignment cOutWhichAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOutWhichOutputStreamEnumRuleCall_2_0_0_0 = (RuleCall)cOutWhichAssignment_2_0_0.eContents().get(0);
		private final Keyword cToKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cOutFileAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cOutFileAnyPathParserRuleCall_2_0_2_0 = (RuleCall)cOutFileAssignment_2_0_2.eContents().get(0);
		private final Assignment cNoAppendAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final Keyword cNoAppendExclamationMarkKeyword_2_0_3_0 = (Keyword)cNoAppendAssignment_2_0_3.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Assignment cInWhichAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cInWhichInputStreamEnumRuleCall_2_1_0_0 = (RuleCall)cInWhichAssignment_2_1_0.eContents().get(0);
		private final Keyword cFromKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cInFileAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cInFileExistingPathParserRuleCall_2_1_2_0 = (RuleCall)cInFileAssignment_2_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Redirect:
		//    {Redirect} 'redirect' ((outWhich = OutputStream 'to' outFile=AnyPath (noAppend?='!')?)? & (inWhich=InputStream 'from' inFile=ExistingPath)?) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Redirect} 'redirect' ((outWhich = OutputStream 'to' outFile=AnyPath (noAppend?='!')?)? & (inWhich=InputStream 'from' inFile=ExistingPath)?) ';'
		public Group getGroup() { return cGroup; }
		
		//{Redirect}
		public Action getRedirectAction_0() { return cRedirectAction_0; }
		
		//'redirect'
		public Keyword getRedirectKeyword_1() { return cRedirectKeyword_1; }
		
		//((outWhich = OutputStream 'to' outFile=AnyPath (noAppend?='!')?)? & (inWhich=InputStream 'from' inFile=ExistingPath)?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//(outWhich = OutputStream 'to' outFile=AnyPath (noAppend?='!')?)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//outWhich = OutputStream
		public Assignment getOutWhichAssignment_2_0_0() { return cOutWhichAssignment_2_0_0; }
		
		//OutputStream
		public RuleCall getOutWhichOutputStreamEnumRuleCall_2_0_0_0() { return cOutWhichOutputStreamEnumRuleCall_2_0_0_0; }
		
		//'to'
		public Keyword getToKeyword_2_0_1() { return cToKeyword_2_0_1; }
		
		//outFile=AnyPath
		public Assignment getOutFileAssignment_2_0_2() { return cOutFileAssignment_2_0_2; }
		
		//AnyPath
		public RuleCall getOutFileAnyPathParserRuleCall_2_0_2_0() { return cOutFileAnyPathParserRuleCall_2_0_2_0; }
		
		//(noAppend?='!')?
		public Assignment getNoAppendAssignment_2_0_3() { return cNoAppendAssignment_2_0_3; }
		
		//'!'
		public Keyword getNoAppendExclamationMarkKeyword_2_0_3_0() { return cNoAppendExclamationMarkKeyword_2_0_3_0; }
		
		//(inWhich=InputStream 'from' inFile=ExistingPath)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//inWhich=InputStream
		public Assignment getInWhichAssignment_2_1_0() { return cInWhichAssignment_2_1_0; }
		
		//InputStream
		public RuleCall getInWhichInputStreamEnumRuleCall_2_1_0_0() { return cInWhichInputStreamEnumRuleCall_2_1_0_0; }
		
		//'from'
		public Keyword getFromKeyword_2_1_1() { return cFromKeyword_2_1_1; }
		
		//inFile=ExistingPath
		public Assignment getInFileAssignment_2_1_2() { return cInFileAssignment_2_1_2; }
		
		//ExistingPath
		public RuleCall getInFileExistingPathParserRuleCall_2_1_2_0() { return cInFileExistingPathParserRuleCall_2_1_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ExecutionEnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ExecutionEnvironment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecutionEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ExecutionEnvironment:
		//    'execution-environment' name=STRING ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'execution-environment' name=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'execution-environment'
		public Keyword getExecutionEnvironmentKeyword_0() { return cExecutionEnvironmentKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ConfigIniTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ConfigIniTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigIniTemplateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathExistingPathParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ConfigIniTemplate:
		//    'config-ini-template' path=ExistingPath ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'config-ini-template' path=ExistingPath ';'
		public Group getGroup() { return cGroup; }
		
		//'config-ini-template'
		public Keyword getConfigIniTemplateKeyword_0() { return cConfigIniTemplateKeyword_0; }
		
		//path=ExistingPath
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }
		
		//ExistingPath
		public RuleCall getPathExistingPathParserRuleCall_1_0() { return cPathExistingPathParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TraceEnablementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.TraceEnablement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTraceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPluginAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPluginFQNameParserRuleCall_1_0 = (RuleCall)cPluginAssignment_1.eContents().get(0);
		private final Assignment cWhatAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWhatSTRINGTerminalRuleCall_2_0 = (RuleCall)cWhatAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TraceEnablement:
		//    'trace' plugin=FQName (what+=STRING)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'trace' plugin=FQName (what+=STRING)* ';'
		public Group getGroup() { return cGroup; }
		
		//'trace'
		public Keyword getTraceKeyword_0() { return cTraceKeyword_0; }
		
		//plugin=FQName
		public Assignment getPluginAssignment_1() { return cPluginAssignment_1; }
		
		//FQName
		public RuleCall getPluginFQNameParserRuleCall_1_0() { return cPluginFQNameParserRuleCall_1_0; }
		
		//(what+=STRING)*
		public Assignment getWhatAssignment_2() { return cWhatAssignment_2; }
		
		//STRING
		public RuleCall getWhatSTRINGTerminalRuleCall_2_0() { return cWhatSTRINGTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class JavaMainSearchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.JavaMainSearch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJavaMainSearchAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSearchMainKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cSystemAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cSystemSystemKeyword_2_0_0 = (Keyword)cSystemAssignment_2_0.eContents().get(0);
		private final Assignment cInheritedAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cInheritedInheritedKeyword_2_1_0 = (Keyword)cInheritedAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JavaMainSearch:
		//    {JavaMainSearch} 'search-main' ((system?='system')? & (inherited?='inherited')?) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{JavaMainSearch} 'search-main' ((system?='system')? & (inherited?='inherited')?) ';'
		public Group getGroup() { return cGroup; }
		
		//{JavaMainSearch}
		public Action getJavaMainSearchAction_0() { return cJavaMainSearchAction_0; }
		
		//'search-main'
		public Keyword getSearchMainKeyword_1() { return cSearchMainKeyword_1; }
		
		//((system?='system')? & (inherited?='inherited')?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//(system?='system')?
		public Assignment getSystemAssignment_2_0() { return cSystemAssignment_2_0; }
		
		//'system'
		public Keyword getSystemSystemKeyword_2_0_0() { return cSystemSystemKeyword_2_0_0; }
		
		//(inherited?='inherited')?
		public Assignment getInheritedAssignment_2_1() { return cInheritedAssignment_2_1; }
		
		//'inherited'
		public Keyword getInheritedInheritedKeyword_2_1_0() { return cInheritedInheritedKeyword_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class RapServletConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.RapServletConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServletKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBLOCK_BEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cPathKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cServletPathAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cServletPathSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cServletPathAssignment_2_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cBrowserKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cBrowserModeAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cBrowserModeBrowserLaunchModeEnumRuleCall_2_1_1_0 = (RuleCall)cBrowserModeAssignment_2_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cPortKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cServerPortAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cServerPortINTTerminalRuleCall_2_2_1_0 = (RuleCall)cServerPortAssignment_2_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cSessionTimeoutKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cSessionTimeoutAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cSessionTimeoutINTTerminalRuleCall_2_3_1_0 = (RuleCall)cSessionTimeoutAssignment_2_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cContextPathKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cContextPathAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cContextPathSTRINGTerminalRuleCall_2_4_1_0 = (RuleCall)cContextPathAssignment_2_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cDevModeKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cDevModeAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cDevModeBOOLEANTerminalRuleCall_2_5_1_0 = (RuleCall)cDevModeAssignment_2_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_5_2 = (Keyword)cGroup_2_5.eContents().get(2);
		private final RuleCall cBLOCK_ENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RapServletConfig:
		//    'servlet' BLOCK_BEGIN
		//        (
		//            ('path' servletPath=STRING ';')
		//            & ('browser' browserMode=BrowserLaunchMode ';')?
		//            & ('port' serverPort=INT ';')?
		//            & ('session-timeout' sessionTimeout=INT ';')?
		//            & ('context-path' contextPath=STRING ';')?
		//            & ('dev-mode' devMode=BOOLEAN ';')?
		//        )
		//    BLOCK_END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'servlet' BLOCK_BEGIN
		//    (
		//        ('path' servletPath=STRING ';')
		//        & ('browser' browserMode=BrowserLaunchMode ';')?
		//        & ('port' serverPort=INT ';')?
		//        & ('session-timeout' sessionTimeout=INT ';')?
		//        & ('context-path' contextPath=STRING ';')?
		//        & ('dev-mode' devMode=BOOLEAN ';')?
		//    )
		//BLOCK_END
		public Group getGroup() { return cGroup; }
		
		//'servlet'
		public Keyword getServletKeyword_0() { return cServletKeyword_0; }
		
		//BLOCK_BEGIN
		public RuleCall getBLOCK_BEGINTerminalRuleCall_1() { return cBLOCK_BEGINTerminalRuleCall_1; }
		
		//(
		//    ('path' servletPath=STRING ';')
		//    & ('browser' browserMode=BrowserLaunchMode ';')?
		//    & ('port' serverPort=INT ';')?
		//    & ('session-timeout' sessionTimeout=INT ';')?
		//    & ('context-path' contextPath=STRING ';')?
		//    & ('dev-mode' devMode=BOOLEAN ';')?
		//)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('path' servletPath=STRING ';')
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'path'
		public Keyword getPathKeyword_2_0_0() { return cPathKeyword_2_0_0; }
		
		//servletPath=STRING
		public Assignment getServletPathAssignment_2_0_1() { return cServletPathAssignment_2_0_1; }
		
		//STRING
		public RuleCall getServletPathSTRINGTerminalRuleCall_2_0_1_0() { return cServletPathSTRINGTerminalRuleCall_2_0_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_0_2() { return cSemicolonKeyword_2_0_2; }
		
		//('browser' browserMode=BrowserLaunchMode ';')?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'browser'
		public Keyword getBrowserKeyword_2_1_0() { return cBrowserKeyword_2_1_0; }
		
		//browserMode=BrowserLaunchMode
		public Assignment getBrowserModeAssignment_2_1_1() { return cBrowserModeAssignment_2_1_1; }
		
		//BrowserLaunchMode
		public RuleCall getBrowserModeBrowserLaunchModeEnumRuleCall_2_1_1_0() { return cBrowserModeBrowserLaunchModeEnumRuleCall_2_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_1_2() { return cSemicolonKeyword_2_1_2; }
		
		//('port' serverPort=INT ';')?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'port'
		public Keyword getPortKeyword_2_2_0() { return cPortKeyword_2_2_0; }
		
		//serverPort=INT
		public Assignment getServerPortAssignment_2_2_1() { return cServerPortAssignment_2_2_1; }
		
		//INT
		public RuleCall getServerPortINTTerminalRuleCall_2_2_1_0() { return cServerPortINTTerminalRuleCall_2_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_2_2() { return cSemicolonKeyword_2_2_2; }
		
		//('session-timeout' sessionTimeout=INT ';')?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'session-timeout'
		public Keyword getSessionTimeoutKeyword_2_3_0() { return cSessionTimeoutKeyword_2_3_0; }
		
		//sessionTimeout=INT
		public Assignment getSessionTimeoutAssignment_2_3_1() { return cSessionTimeoutAssignment_2_3_1; }
		
		//INT
		public RuleCall getSessionTimeoutINTTerminalRuleCall_2_3_1_0() { return cSessionTimeoutINTTerminalRuleCall_2_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_3_2() { return cSemicolonKeyword_2_3_2; }
		
		//('context-path' contextPath=STRING ';')?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'context-path'
		public Keyword getContextPathKeyword_2_4_0() { return cContextPathKeyword_2_4_0; }
		
		//contextPath=STRING
		public Assignment getContextPathAssignment_2_4_1() { return cContextPathAssignment_2_4_1; }
		
		//STRING
		public RuleCall getContextPathSTRINGTerminalRuleCall_2_4_1_0() { return cContextPathSTRINGTerminalRuleCall_2_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4_2() { return cSemicolonKeyword_2_4_2; }
		
		//('dev-mode' devMode=BOOLEAN ';')?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'dev-mode'
		public Keyword getDevModeKeyword_2_5_0() { return cDevModeKeyword_2_5_0; }
		
		//devMode=BOOLEAN
		public Assignment getDevModeAssignment_2_5_1() { return cDevModeAssignment_2_5_1; }
		
		//BOOLEAN
		public RuleCall getDevModeBOOLEANTerminalRuleCall_2_5_1_0() { return cDevModeBOOLEANTerminalRuleCall_2_5_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5_2() { return cSemicolonKeyword_2_5_2; }
		
		//BLOCK_END
		public RuleCall getBLOCK_ENDTerminalRuleCall_3() { return cBLOCK_ENDTerminalRuleCall_3; }
	}
	public class PathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Path");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExistingPathParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnyPathParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Path:
		//    ExistingPath|AnyPath // TODO: content assist? is it possible?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ExistingPath|AnyPath
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ExistingPath
		public RuleCall getExistingPathParserRuleCall_0() { return cExistingPathParserRuleCall_0; }
		
		//AnyPath
		public RuleCall getAnyPathParserRuleCall_1() { return cAnyPathParserRuleCall_1; }
	}
	public class ExistingPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ExistingPath");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameStringWithVariablesParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//ExistingPath:
		//    name = StringWithVariables
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = StringWithVariables
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//StringWithVariables
		public RuleCall getNameStringWithVariablesParserRuleCall_0() { return cNameStringWithVariablesParserRuleCall_0; }
	}
	public class AnyPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.AnyPath");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameStringWithVariablesParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//AnyPath:
		//    name = StringWithVariables
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = StringWithVariables
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//StringWithVariables
		public RuleCall getNameStringWithVariablesParserRuleCall_0() { return cNameStringWithVariablesParserRuleCall_0; }
	}
	public class PluginWithVersionAndStartLevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.PluginWithVersionAndStartLevel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPluginAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPluginPluginWithVersionParserRuleCall_0_0 = (RuleCall)cPluginAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cAutoStartAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cAutoStartAutostartKeyword_1_0_0 = (Keyword)cAutoStartAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cStartlevelKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cStartLevelAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cStartLevelINTTerminalRuleCall_1_1_1_0 = (RuleCall)cStartLevelAssignment_1_1_1.eContents().get(0);
		
		//PluginWithVersionAndStartLevel:
		//    plugin = PluginWithVersion ((autoStart?='autostart')? & ('startlevel' startLevel=INT)?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//plugin = PluginWithVersion ((autoStart?='autostart')? & ('startlevel' startLevel=INT)?)
		public Group getGroup() { return cGroup; }
		
		//plugin = PluginWithVersion
		public Assignment getPluginAssignment_0() { return cPluginAssignment_0; }
		
		//PluginWithVersion
		public RuleCall getPluginPluginWithVersionParserRuleCall_0_0() { return cPluginPluginWithVersionParserRuleCall_0_0; }
		
		//((autoStart?='autostart')? & ('startlevel' startLevel=INT)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//(autoStart?='autostart')?
		public Assignment getAutoStartAssignment_1_0() { return cAutoStartAssignment_1_0; }
		
		//'autostart'
		public Keyword getAutoStartAutostartKeyword_1_0_0() { return cAutoStartAutostartKeyword_1_0_0; }
		
		//('startlevel' startLevel=INT)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'startlevel'
		public Keyword getStartlevelKeyword_1_1_0() { return cStartlevelKeyword_1_1_0; }
		
		//startLevel=INT
		public Assignment getStartLevelAssignment_1_1_1() { return cStartLevelAssignment_1_1_1; }
		
		//INT
		public RuleCall getStartLevelINTTerminalRuleCall_1_1_1_0() { return cStartLevelINTTerminalRuleCall_1_1_1_0; }
	}
	public class PluginWithVersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.PluginWithVersion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameFQNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cVersionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVersionVERSIONTerminalRuleCall_1_0 = (RuleCall)cVersionAssignment_1.eContents().get(0);
		
		//PluginWithVersion:
		//    name = FQName (version=VERSION)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = FQName (version=VERSION)?
		public Group getGroup() { return cGroup; }
		
		//name = FQName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_0_0() { return cNameFQNameParserRuleCall_0_0; }
		
		//(version=VERSION)?
		public Assignment getVersionAssignment_1() { return cVersionAssignment_1; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_1_0() { return cVersionVERSIONTerminalRuleCall_1_0; }
	}
	public class FeatureWithVersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.FeatureWithVersion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameFQNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cVersionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVersionVERSIONTerminalRuleCall_1_0 = (RuleCall)cVersionAssignment_1.eContents().get(0);
		
		//FeatureWithVersion:
		//    name = FQName (version=VERSION)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = FQName (version=VERSION)?
		public Group getGroup() { return cGroup; }
		
		//name = FQName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_0_0() { return cNameFQNameParserRuleCall_0_0; }
		
		//(version=VERSION)?
		public Assignment getVersionAssignment_1() { return cVersionAssignment_1; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_1_0() { return cVersionVERSIONTerminalRuleCall_1_0; }
	}
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Project");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameFQNameParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Project:
		//    name = FQName
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = FQName
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_0() { return cNameFQNameParserRuleCall_0; }
	}
	public class JavaMainTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.JavaMainType");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameFQNameParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//JavaMainType:
		//    name = FQName
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = FQName
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//FQName
		public RuleCall getNameFQNameParserRuleCall_0() { return cNameFQNameParserRuleCall_0; }
	}
	public class ClearOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ClearOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClearOptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClearKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_0_0 = (Alternatives)cGroup_2_0.eContents().get(0);
		private final Assignment cWorkspaceAssignment_2_0_0_0 = (Assignment)cAlternatives_2_0_0.eContents().get(0);
		private final Keyword cWorkspaceWorkspaceKeyword_2_0_0_0_0 = (Keyword)cWorkspaceAssignment_2_0_0_0.eContents().get(0);
		private final Assignment cLogAssignment_2_0_0_1 = (Assignment)cAlternatives_2_0_0.eContents().get(1);
		private final Keyword cLogLogKeyword_2_0_0_1_0 = (Keyword)cLogAssignment_2_0_0_1.eContents().get(0);
		private final Assignment cNoAskClearAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final Keyword cNoAskClearExclamationMarkKeyword_2_0_1_0 = (Keyword)cNoAskClearAssignment_2_0_1.eContents().get(0);
		private final Assignment cConfigAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cConfigConfigKeyword_2_1_0 = (Keyword)cConfigAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ClearOption:
		//    {ClearOption} 'clear' (((workspace?='workspace' | log?='log') (noAskClear?='!')?)? & (config?='config')?) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ClearOption} 'clear' (((workspace?='workspace' | log?='log') (noAskClear?='!')?)? & (config?='config')?) ';'
		public Group getGroup() { return cGroup; }
		
		//{ClearOption}
		public Action getClearOptionAction_0() { return cClearOptionAction_0; }
		
		//'clear'
		public Keyword getClearKeyword_1() { return cClearKeyword_1; }
		
		//(((workspace?='workspace' | log?='log') (noAskClear?='!')?)? & (config?='config')?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//((workspace?='workspace' | log?='log') (noAskClear?='!')?)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//(workspace?='workspace' | log?='log')
		public Alternatives getAlternatives_2_0_0() { return cAlternatives_2_0_0; }
		
		//workspace?='workspace'
		public Assignment getWorkspaceAssignment_2_0_0_0() { return cWorkspaceAssignment_2_0_0_0; }
		
		//'workspace'
		public Keyword getWorkspaceWorkspaceKeyword_2_0_0_0_0() { return cWorkspaceWorkspaceKeyword_2_0_0_0_0; }
		
		//log?='log'
		public Assignment getLogAssignment_2_0_0_1() { return cLogAssignment_2_0_0_1; }
		
		//'log'
		public Keyword getLogLogKeyword_2_0_0_1_0() { return cLogLogKeyword_2_0_0_1_0; }
		
		//(noAskClear?='!')?
		public Assignment getNoAskClearAssignment_2_0_1() { return cNoAskClearAssignment_2_0_1; }
		
		//'!'
		public Keyword getNoAskClearExclamationMarkKeyword_2_0_1_0() { return cNoAskClearExclamationMarkKeyword_2_0_1_0; }
		
		//(config?='config')?
		public Assignment getConfigAssignment_2_1() { return cConfigAssignment_2_1; }
		
		//'config'
		public Keyword getConfigConfigKeyword_2_1_0() { return cConfigConfigKeyword_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class MemoryOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.MemoryOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMemoryOptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMemoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cMinKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final RuleCall cEQTerminalRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Assignment cMinAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cMinINTTerminalRuleCall_2_0_2_0 = (RuleCall)cMinAssignment_2_0_2.eContents().get(0);
		private final Assignment cMinUnitAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cMinUnitMemoryUnitEnumRuleCall_2_0_3_0 = (RuleCall)cMinUnitAssignment_2_0_3.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cMaxKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final RuleCall cEQTerminalRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Assignment cMaxAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cMaxINTTerminalRuleCall_2_1_2_0 = (RuleCall)cMaxAssignment_2_1_2.eContents().get(0);
		private final Assignment cMaxUnitAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cMaxUnitMemoryUnitEnumRuleCall_2_1_3_0 = (RuleCall)cMaxUnitAssignment_2_1_3.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cPermKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final RuleCall cEQTerminalRuleCall_2_2_1 = (RuleCall)cGroup_2_2.eContents().get(1);
		private final Assignment cPermAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cPermINTTerminalRuleCall_2_2_2_0 = (RuleCall)cPermAssignment_2_2_2.eContents().get(0);
		private final Assignment cPermUnitAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final RuleCall cPermUnitMemoryUnitEnumRuleCall_2_2_3_0 = (RuleCall)cPermUnitAssignment_2_2_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MemoryOption:
		//    {MemoryOption} 'memory' (('min' EQ min=INT minUnit=MemoryUnit)? & ('max' EQ max=INT maxUnit=MemoryUnit)? & ('perm' EQ perm=INT permUnit=MemoryUnit)?) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{MemoryOption} 'memory' (('min' EQ min=INT minUnit=MemoryUnit)? & ('max' EQ max=INT maxUnit=MemoryUnit)? & ('perm' EQ perm=INT permUnit=MemoryUnit)?) ';'
		public Group getGroup() { return cGroup; }
		
		//{MemoryOption}
		public Action getMemoryOptionAction_0() { return cMemoryOptionAction_0; }
		
		//'memory'
		public Keyword getMemoryKeyword_1() { return cMemoryKeyword_1; }
		
		//(('min' EQ min=INT minUnit=MemoryUnit)? & ('max' EQ max=INT maxUnit=MemoryUnit)? & ('perm' EQ perm=INT permUnit=MemoryUnit)?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('min' EQ min=INT minUnit=MemoryUnit)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'min'
		public Keyword getMinKeyword_2_0_0() { return cMinKeyword_2_0_0; }
		
		//EQ
		public RuleCall getEQTerminalRuleCall_2_0_1() { return cEQTerminalRuleCall_2_0_1; }
		
		//min=INT
		public Assignment getMinAssignment_2_0_2() { return cMinAssignment_2_0_2; }
		
		//INT
		public RuleCall getMinINTTerminalRuleCall_2_0_2_0() { return cMinINTTerminalRuleCall_2_0_2_0; }
		
		//minUnit=MemoryUnit
		public Assignment getMinUnitAssignment_2_0_3() { return cMinUnitAssignment_2_0_3; }
		
		//MemoryUnit
		public RuleCall getMinUnitMemoryUnitEnumRuleCall_2_0_3_0() { return cMinUnitMemoryUnitEnumRuleCall_2_0_3_0; }
		
		//('max' EQ max=INT maxUnit=MemoryUnit)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'max'
		public Keyword getMaxKeyword_2_1_0() { return cMaxKeyword_2_1_0; }
		
		//EQ
		public RuleCall getEQTerminalRuleCall_2_1_1() { return cEQTerminalRuleCall_2_1_1; }
		
		//max=INT
		public Assignment getMaxAssignment_2_1_2() { return cMaxAssignment_2_1_2; }
		
		//INT
		public RuleCall getMaxINTTerminalRuleCall_2_1_2_0() { return cMaxINTTerminalRuleCall_2_1_2_0; }
		
		//maxUnit=MemoryUnit
		public Assignment getMaxUnitAssignment_2_1_3() { return cMaxUnitAssignment_2_1_3; }
		
		//MemoryUnit
		public RuleCall getMaxUnitMemoryUnitEnumRuleCall_2_1_3_0() { return cMaxUnitMemoryUnitEnumRuleCall_2_1_3_0; }
		
		//('perm' EQ perm=INT permUnit=MemoryUnit)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'perm'
		public Keyword getPermKeyword_2_2_0() { return cPermKeyword_2_2_0; }
		
		//EQ
		public RuleCall getEQTerminalRuleCall_2_2_1() { return cEQTerminalRuleCall_2_2_1; }
		
		//perm=INT
		public Assignment getPermAssignment_2_2_2() { return cPermAssignment_2_2_2; }
		
		//INT
		public RuleCall getPermINTTerminalRuleCall_2_2_2_0() { return cPermINTTerminalRuleCall_2_2_2_0; }
		
		//permUnit=MemoryUnit
		public Assignment getPermUnitAssignment_2_2_3() { return cPermUnitAssignment_2_2_3; }
		
		//MemoryUnit
		public RuleCall getPermUnitMemoryUnitEnumRuleCall_2_2_3_0() { return cPermUnitMemoryUnitEnumRuleCall_2_2_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class GroupMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.GroupMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final RuleCall cTypeLaunchModeTypeEnumRuleCall_0_0_0 = (RuleCall)cTypeAssignment_0_0.eContents().get(0);
		private final Assignment cAdoptAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final Keyword cAdoptAdoptKeyword_0_1_0 = (Keyword)cAdoptAssignment_0_1.eContents().get(0);
		private final Keyword cMemberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberLaunchConfigCrossReference_2_0 = (CrossReference)cMemberAssignment_2.eContents().get(0);
		private final RuleCall cMemberLaunchConfigFQNameParserRuleCall_2_0_1 = (RuleCall)cMemberLaunchConfigCrossReference_2_0.eContents().get(1);
		private final Assignment cPostActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPostActionGroupPostLaunchActionParserRuleCall_3_0 = (RuleCall)cPostActionAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GroupMember:
		//    ((type=LaunchModeType)? & (adopt?='adopt')?) 'member' member=[LaunchConfig|FQName] (postAction=GroupPostLaunchAction)? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//((type=LaunchModeType)? & (adopt?='adopt')?) 'member' member=[LaunchConfig|FQName] (postAction=GroupPostLaunchAction)? ';'
		public Group getGroup() { return cGroup; }
		
		//((type=LaunchModeType)? & (adopt?='adopt')?)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//(type=LaunchModeType)?
		public Assignment getTypeAssignment_0_0() { return cTypeAssignment_0_0; }
		
		//LaunchModeType
		public RuleCall getTypeLaunchModeTypeEnumRuleCall_0_0_0() { return cTypeLaunchModeTypeEnumRuleCall_0_0_0; }
		
		//(adopt?='adopt')?
		public Assignment getAdoptAssignment_0_1() { return cAdoptAssignment_0_1; }
		
		//'adopt'
		public Keyword getAdoptAdoptKeyword_0_1_0() { return cAdoptAdoptKeyword_0_1_0; }
		
		//'member'
		public Keyword getMemberKeyword_1() { return cMemberKeyword_1; }
		
		//member=[LaunchConfig|FQName]
		public Assignment getMemberAssignment_2() { return cMemberAssignment_2; }
		
		//[LaunchConfig|FQName]
		public CrossReference getMemberLaunchConfigCrossReference_2_0() { return cMemberLaunchConfigCrossReference_2_0; }
		
		//FQName
		public RuleCall getMemberLaunchConfigFQNameParserRuleCall_2_0_1() { return cMemberLaunchConfigFQNameParserRuleCall_2_0_1; }
		
		//(postAction=GroupPostLaunchAction)?
		public Assignment getPostActionAssignment_3() { return cPostActionAssignment_3; }
		
		//GroupPostLaunchAction
		public RuleCall getPostActionGroupPostLaunchActionParserRuleCall_3_0() { return cPostActionGroupPostLaunchActionParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class GroupPostLaunchActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.GroupPostLaunchAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGroupPostLaunchDelayParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGroupPostLaunchRegexParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGroupPostLaunchWaitParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GroupPostLaunchAction:
		//    GroupPostLaunchDelay|GroupPostLaunchRegex|GroupPostLaunchWait
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//GroupPostLaunchDelay|GroupPostLaunchRegex|GroupPostLaunchWait
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GroupPostLaunchDelay
		public RuleCall getGroupPostLaunchDelayParserRuleCall_0() { return cGroupPostLaunchDelayParserRuleCall_0; }
		
		//GroupPostLaunchRegex
		public RuleCall getGroupPostLaunchRegexParserRuleCall_1() { return cGroupPostLaunchRegexParserRuleCall_1; }
		
		//GroupPostLaunchWait
		public RuleCall getGroupPostLaunchWaitParserRuleCall_2() { return cGroupPostLaunchWaitParserRuleCall_2; }
	}
	public class GroupPostLaunchDelayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.GroupPostLaunchDelay");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDelayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDelayINTTerminalRuleCall_1_0 = (RuleCall)cDelayAssignment_1.eContents().get(0);
		
		//GroupPostLaunchDelay:
		//    'delay' delay=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'delay' delay=INT
		public Group getGroup() { return cGroup; }
		
		//'delay'
		public Keyword getDelayKeyword_0() { return cDelayKeyword_0; }
		
		//delay=INT
		public Assignment getDelayAssignment_1() { return cDelayAssignment_1; }
		
		//INT
		public RuleCall getDelayINTTerminalRuleCall_1_0() { return cDelayINTTerminalRuleCall_1_0; }
	}
	public class GroupPostLaunchRegexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.GroupPostLaunchRegex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRegexAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRegexSTRINGTerminalRuleCall_1_0 = (RuleCall)cRegexAssignment_1.eContents().get(0);
		
		//GroupPostLaunchRegex:
		//    'regex' regex=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'regex' regex=STRING
		public Group getGroup() { return cGroup; }
		
		//'regex'
		public Keyword getRegexKeyword_0() { return cRegexKeyword_0; }
		
		//regex=STRING
		public Assignment getRegexAssignment_1() { return cRegexAssignment_1; }
		
		//STRING
		public RuleCall getRegexSTRINGTerminalRuleCall_1_0() { return cRegexSTRINGTerminalRuleCall_1_0; }
	}
	public class GroupPostLaunchWaitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.GroupPostLaunchWait");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupPostLaunchWaitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWaitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GroupPostLaunchWait:
		//    {GroupPostLaunchWait} 'wait'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupPostLaunchWait} 'wait'
		public Group getGroup() { return cGroup; }
		
		//{GroupPostLaunchWait}
		public Action getGroupPostLaunchWaitAction_0() { return cGroupPostLaunchWaitAction_0; }
		
		//'wait'
		public Keyword getWaitKeyword_1() { return cWaitKeyword_1; }
	}
	public class StringWithVariablesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.StringWithVariables");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringWithVariables:
		//    value=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class TestConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.TestConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTestConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTestKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBLOCK_BEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cRunnerKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cRunnerAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cRunnerTestRunnerTypeEnumRuleCall_3_0_1_0 = (RuleCall)cRunnerAssignment_3_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cContainerKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cContainerAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cContainerSTRINGTerminalRuleCall_3_1_1_0 = (RuleCall)cContainerAssignment_3_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cClassKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cClassAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cClassFQNameParserRuleCall_3_2_1_0 = (RuleCall)cClassAssignment_3_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cMethodKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cMethodAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cMethodSTRINGTerminalRuleCall_3_3_1_0 = (RuleCall)cMethodAssignment_3_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cExcludeTagsKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cExcludeTagsAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cExcludeTagsTagsParserRuleCall_3_4_1_0 = (RuleCall)cExcludeTagsAssignment_3_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_4_2 = (Keyword)cGroup_3_4.eContents().get(2);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cIncludeTagsKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Assignment cIncludeTagsAssignment_3_5_1 = (Assignment)cGroup_3_5.eContents().get(1);
		private final RuleCall cIncludeTagsTagsParserRuleCall_3_5_1_0 = (RuleCall)cIncludeTagsAssignment_3_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_5_2 = (Keyword)cGroup_3_5.eContents().get(2);
		private final RuleCall cBLOCK_ENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//TestConfig:
		//    {TestConfig} 'test' BLOCK_BEGIN
		//        (
		//            ('runner' runner=TestRunnerType ';')?
		//            & ('container' container=STRING ';')?
		//            & ('class' class=FQName ';')?
		//            & ('method' method=STRING ';')?
		//            & ('exclude-tags' excludeTags=Tags ';')?
		//            & ('include-tags' includeTags=Tags ';')?
		//        )
		//    BLOCK_END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{TestConfig} 'test' BLOCK_BEGIN
		//    (
		//        ('runner' runner=TestRunnerType ';')?
		//        & ('container' container=STRING ';')?
		//        & ('class' class=FQName ';')?
		//        & ('method' method=STRING ';')?
		//        & ('exclude-tags' excludeTags=Tags ';')?
		//        & ('include-tags' includeTags=Tags ';')?
		//    )
		//BLOCK_END
		public Group getGroup() { return cGroup; }
		
		//{TestConfig}
		public Action getTestConfigAction_0() { return cTestConfigAction_0; }
		
		//'test'
		public Keyword getTestKeyword_1() { return cTestKeyword_1; }
		
		//BLOCK_BEGIN
		public RuleCall getBLOCK_BEGINTerminalRuleCall_2() { return cBLOCK_BEGINTerminalRuleCall_2; }
		
		//(
		//    ('runner' runner=TestRunnerType ';')?
		//    & ('container' container=STRING ';')?
		//    & ('class' class=FQName ';')?
		//    & ('method' method=STRING ';')?
		//    & ('exclude-tags' excludeTags=Tags ';')?
		//    & ('include-tags' includeTags=Tags ';')?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('runner' runner=TestRunnerType ';')?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'runner'
		public Keyword getRunnerKeyword_3_0_0() { return cRunnerKeyword_3_0_0; }
		
		//runner=TestRunnerType
		public Assignment getRunnerAssignment_3_0_1() { return cRunnerAssignment_3_0_1; }
		
		//TestRunnerType
		public RuleCall getRunnerTestRunnerTypeEnumRuleCall_3_0_1_0() { return cRunnerTestRunnerTypeEnumRuleCall_3_0_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0_2() { return cSemicolonKeyword_3_0_2; }
		
		//('container' container=STRING ';')?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'container'
		public Keyword getContainerKeyword_3_1_0() { return cContainerKeyword_3_1_0; }
		
		//container=STRING
		public Assignment getContainerAssignment_3_1_1() { return cContainerAssignment_3_1_1; }
		
		//STRING
		public RuleCall getContainerSTRINGTerminalRuleCall_3_1_1_0() { return cContainerSTRINGTerminalRuleCall_3_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1_2() { return cSemicolonKeyword_3_1_2; }
		
		//('class' class=FQName ';')?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'class'
		public Keyword getClassKeyword_3_2_0() { return cClassKeyword_3_2_0; }
		
		//class=FQName
		public Assignment getClassAssignment_3_2_1() { return cClassAssignment_3_2_1; }
		
		//FQName
		public RuleCall getClassFQNameParserRuleCall_3_2_1_0() { return cClassFQNameParserRuleCall_3_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_2_2() { return cSemicolonKeyword_3_2_2; }
		
		//('method' method=STRING ';')?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'method'
		public Keyword getMethodKeyword_3_3_0() { return cMethodKeyword_3_3_0; }
		
		//method=STRING
		public Assignment getMethodAssignment_3_3_1() { return cMethodAssignment_3_3_1; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_3_3_1_0() { return cMethodSTRINGTerminalRuleCall_3_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3_2() { return cSemicolonKeyword_3_3_2; }
		
		//('exclude-tags' excludeTags=Tags ';')?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'exclude-tags'
		public Keyword getExcludeTagsKeyword_3_4_0() { return cExcludeTagsKeyword_3_4_0; }
		
		//excludeTags=Tags
		public Assignment getExcludeTagsAssignment_3_4_1() { return cExcludeTagsAssignment_3_4_1; }
		
		//Tags
		public RuleCall getExcludeTagsTagsParserRuleCall_3_4_1_0() { return cExcludeTagsTagsParserRuleCall_3_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4_2() { return cSemicolonKeyword_3_4_2; }
		
		//('include-tags' includeTags=Tags ';')?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'include-tags'
		public Keyword getIncludeTagsKeyword_3_5_0() { return cIncludeTagsKeyword_3_5_0; }
		
		//includeTags=Tags
		public Assignment getIncludeTagsAssignment_3_5_1() { return cIncludeTagsAssignment_3_5_1; }
		
		//Tags
		public RuleCall getIncludeTagsTagsParserRuleCall_3_5_1_0() { return cIncludeTagsTagsParserRuleCall_3_5_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5_2() { return cSemicolonKeyword_3_5_2; }
		
		//BLOCK_END
		public RuleCall getBLOCK_ENDTerminalRuleCall_4() { return cBLOCK_ENDTerminalRuleCall_4; }
	}
	public class FQNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.FQName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		///**
		// * A possibly fully qualified name (separated by '.').
		// */
		//FQName:
		//    ID ('.' ID)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class TagsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.Tags");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//Tags:
		//    ID (',' ID)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID (',' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//(',' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	public class BrowserLaunchModeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BrowserLaunchMode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTERNALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTERNALInternalKeyword_0_0 = (Keyword)cINTERNALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEXTERNALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEXTERNALExternalKeyword_1_0 = (Keyword)cEXTERNALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENoneKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum BrowserLaunchMode:
		//    INTERNAL='internal' | EXTERNAL = 'external' | NONE = 'none'
		//;
		public EnumRule getRule() { return rule; }
		
		//INTERNAL='internal' | EXTERNAL = 'external' | NONE = 'none'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INTERNAL='internal'
		public EnumLiteralDeclaration getINTERNALEnumLiteralDeclaration_0() { return cINTERNALEnumLiteralDeclaration_0; }
		
		//'internal'
		public Keyword getINTERNALInternalKeyword_0_0() { return cINTERNALInternalKeyword_0_0; }
		
		//EXTERNAL = 'external'
		public EnumLiteralDeclaration getEXTERNALEnumLiteralDeclaration_1() { return cEXTERNALEnumLiteralDeclaration_1; }
		
		//'external'
		public Keyword getEXTERNALExternalKeyword_1_0() { return cEXTERNALExternalKeyword_1_0; }
		
		//NONE = 'none'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }
		
		//'none'
		public Keyword getNONENoneKeyword_2_0() { return cNONENoneKeyword_2_0; }
	}
	public class LaunchConfigTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.LaunchConfigType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJAVAEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJAVAJavaKeyword_0_0 = (Keyword)cJAVAEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cECLIPSEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cECLIPSEEclipseKeyword_1_0 = (Keyword)cECLIPSEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRAPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRAPRapKeyword_2_0 = (Keyword)cRAPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGROUPEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGROUPGroupKeyword_3_0 = (Keyword)cGROUPEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSWTBOTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSWTBOTSwtbotKeyword_4_0 = (Keyword)cSWTBOTEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cJUNIT_PLUGINEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cJUNIT_PLUGINJunitPluginKeyword_5_0 = (Keyword)cJUNIT_PLUGINEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum LaunchConfigType:
		//    JAVA = "java" | ECLIPSE = "eclipse" | RAP = "rap" | GROUP = "group" | SWTBOT = "swtbot" | JUNIT_PLUGIN = "junit-plugin"
		//;
		public EnumRule getRule() { return rule; }
		
		//JAVA = "java" | ECLIPSE = "eclipse" | RAP = "rap" | GROUP = "group" | SWTBOT = "swtbot" | JUNIT_PLUGIN = "junit-plugin"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JAVA = "java"
		public EnumLiteralDeclaration getJAVAEnumLiteralDeclaration_0() { return cJAVAEnumLiteralDeclaration_0; }
		
		//"java"
		public Keyword getJAVAJavaKeyword_0_0() { return cJAVAJavaKeyword_0_0; }
		
		//ECLIPSE = "eclipse"
		public EnumLiteralDeclaration getECLIPSEEnumLiteralDeclaration_1() { return cECLIPSEEnumLiteralDeclaration_1; }
		
		//"eclipse"
		public Keyword getECLIPSEEclipseKeyword_1_0() { return cECLIPSEEclipseKeyword_1_0; }
		
		//RAP = "rap"
		public EnumLiteralDeclaration getRAPEnumLiteralDeclaration_2() { return cRAPEnumLiteralDeclaration_2; }
		
		//"rap"
		public Keyword getRAPRapKeyword_2_0() { return cRAPRapKeyword_2_0; }
		
		//GROUP = "group"
		public EnumLiteralDeclaration getGROUPEnumLiteralDeclaration_3() { return cGROUPEnumLiteralDeclaration_3; }
		
		//"group"
		public Keyword getGROUPGroupKeyword_3_0() { return cGROUPGroupKeyword_3_0; }
		
		//SWTBOT = "swtbot"
		public EnumLiteralDeclaration getSWTBOTEnumLiteralDeclaration_4() { return cSWTBOTEnumLiteralDeclaration_4; }
		
		//"swtbot"
		public Keyword getSWTBOTSwtbotKeyword_4_0() { return cSWTBOTSwtbotKeyword_4_0; }
		
		//JUNIT_PLUGIN = "junit-plugin"
		public EnumLiteralDeclaration getJUNIT_PLUGINEnumLiteralDeclaration_5() { return cJUNIT_PLUGINEnumLiteralDeclaration_5; }
		
		//"junit-plugin"
		public Keyword getJUNIT_PLUGINJunitPluginKeyword_5_0() { return cJUNIT_PLUGINJunitPluginKeyword_5_0; }
	}
	public class LaunchModeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.LaunchModeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINHERITEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINHERITInheritKeyword_0_0 = (Keyword)cINHERITEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRUNEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRUNRunKeyword_1_0 = (Keyword)cRUNEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDEBUGEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDEBUGDebugKeyword_2_0 = (Keyword)cDEBUGEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPROFILEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPROFILEProfileKeyword_3_0 = (Keyword)cPROFILEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOVERAGEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOVERAGECoverageKeyword_4_0 = (Keyword)cCOVERAGEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LaunchModeType:
		//    INHERIT = "inherit" | RUN = "run" | DEBUG = "debug" | PROFILE = "profile" | COVERAGE = "coverage"
		//;
		public EnumRule getRule() { return rule; }
		
		//INHERIT = "inherit" | RUN = "run" | DEBUG = "debug" | PROFILE = "profile" | COVERAGE = "coverage"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INHERIT = "inherit"
		public EnumLiteralDeclaration getINHERITEnumLiteralDeclaration_0() { return cINHERITEnumLiteralDeclaration_0; }
		
		//"inherit"
		public Keyword getINHERITInheritKeyword_0_0() { return cINHERITInheritKeyword_0_0; }
		
		//RUN = "run"
		public EnumLiteralDeclaration getRUNEnumLiteralDeclaration_1() { return cRUNEnumLiteralDeclaration_1; }
		
		//"run"
		public Keyword getRUNRunKeyword_1_0() { return cRUNRunKeyword_1_0; }
		
		//DEBUG = "debug"
		public EnumLiteralDeclaration getDEBUGEnumLiteralDeclaration_2() { return cDEBUGEnumLiteralDeclaration_2; }
		
		//"debug"
		public Keyword getDEBUGDebugKeyword_2_0() { return cDEBUGDebugKeyword_2_0; }
		
		//PROFILE = "profile"
		public EnumLiteralDeclaration getPROFILEEnumLiteralDeclaration_3() { return cPROFILEEnumLiteralDeclaration_3; }
		
		//"profile"
		public Keyword getPROFILEProfileKeyword_3_0() { return cPROFILEProfileKeyword_3_0; }
		
		//COVERAGE = "coverage"
		public EnumLiteralDeclaration getCOVERAGEEnumLiteralDeclaration_4() { return cCOVERAGEEnumLiteralDeclaration_4; }
		
		//"coverage"
		public Keyword getCOVERAGECoverageKeyword_4_0() { return cCOVERAGECoverageKeyword_4_0; }
	}
	public class MemoryUnitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.MemoryUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMBEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMBMKeyword_0_0 = (Keyword)cMBEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMBEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMBMbKeyword_1_0 = (Keyword)cMBEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMBEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMBMBKeyword_2_0 = (Keyword)cMBEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMBEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMBMKeyword_3_0 = (Keyword)cMBEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGBEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGBGKeyword_4_0 = (Keyword)cGBEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cGBEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cGBGbKeyword_5_0 = (Keyword)cGBEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cGBEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cGBGBKeyword_6_0 = (Keyword)cGBEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cGBEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cGBGKeyword_7_0 = (Keyword)cGBEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum MemoryUnit:
		//    MB = 'M' | MB = 'mb' | MB = 'MB' | MB = 'm' |
		//    GB = 'G' | GB = 'gb' | GB = 'GB' | GB = 'g'
		//;
		public EnumRule getRule() { return rule; }
		
		//MB = 'M' | MB = 'mb' | MB = 'MB' | MB = 'm' |
		//GB = 'G' | GB = 'gb' | GB = 'GB' | GB = 'g'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MB = 'M'
		public EnumLiteralDeclaration getMBEnumLiteralDeclaration_0() { return cMBEnumLiteralDeclaration_0; }
		
		//'M'
		public Keyword getMBMKeyword_0_0() { return cMBMKeyword_0_0; }
		
		//MB = 'mb'
		public EnumLiteralDeclaration getMBEnumLiteralDeclaration_1() { return cMBEnumLiteralDeclaration_1; }
		
		//'mb'
		public Keyword getMBMbKeyword_1_0() { return cMBMbKeyword_1_0; }
		
		//MB = 'MB'
		public EnumLiteralDeclaration getMBEnumLiteralDeclaration_2() { return cMBEnumLiteralDeclaration_2; }
		
		//'MB'
		public Keyword getMBMBKeyword_2_0() { return cMBMBKeyword_2_0; }
		
		//MB = 'm'
		public EnumLiteralDeclaration getMBEnumLiteralDeclaration_3() { return cMBEnumLiteralDeclaration_3; }
		
		//'m'
		public Keyword getMBMKeyword_3_0() { return cMBMKeyword_3_0; }
		
		//GB = 'G'
		public EnumLiteralDeclaration getGBEnumLiteralDeclaration_4() { return cGBEnumLiteralDeclaration_4; }
		
		//'G'
		public Keyword getGBGKeyword_4_0() { return cGBGKeyword_4_0; }
		
		//GB = 'gb'
		public EnumLiteralDeclaration getGBEnumLiteralDeclaration_5() { return cGBEnumLiteralDeclaration_5; }
		
		//'gb'
		public Keyword getGBGbKeyword_5_0() { return cGBGbKeyword_5_0; }
		
		//GB = 'GB'
		public EnumLiteralDeclaration getGBEnumLiteralDeclaration_6() { return cGBEnumLiteralDeclaration_6; }
		
		//'GB'
		public Keyword getGBGBKeyword_6_0() { return cGBGBKeyword_6_0; }
		
		//GB = 'g'
		public EnumLiteralDeclaration getGBEnumLiteralDeclaration_7() { return cGBEnumLiteralDeclaration_7; }
		
		//'g'
		public Keyword getGBGKeyword_7_0() { return cGBGKeyword_7_0; }
	}
	public class OutputStreamElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.OutputStream");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTDOUTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTDOUTStdoutKeyword_0_0 = (Keyword)cSTDOUTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTDERREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTDERRStderrKeyword_1_0 = (Keyword)cSTDERREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOTHEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOTHBothOutKeyword_2_0 = (Keyword)cBOTHEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum OutputStream:
		//    STDOUT = "stdout" | STDERR = "stderr" | BOTH = "both-out"
		//;
		public EnumRule getRule() { return rule; }
		
		//STDOUT = "stdout" | STDERR = "stderr" | BOTH = "both-out"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STDOUT = "stdout"
		public EnumLiteralDeclaration getSTDOUTEnumLiteralDeclaration_0() { return cSTDOUTEnumLiteralDeclaration_0; }
		
		//"stdout"
		public Keyword getSTDOUTStdoutKeyword_0_0() { return cSTDOUTStdoutKeyword_0_0; }
		
		//STDERR = "stderr"
		public EnumLiteralDeclaration getSTDERREnumLiteralDeclaration_1() { return cSTDERREnumLiteralDeclaration_1; }
		
		//"stderr"
		public Keyword getSTDERRStderrKeyword_1_0() { return cSTDERRStderrKeyword_1_0; }
		
		//BOTH = "both-out"
		public EnumLiteralDeclaration getBOTHEnumLiteralDeclaration_2() { return cBOTHEnumLiteralDeclaration_2; }
		
		//"both-out"
		public Keyword getBOTHBothOutKeyword_2_0() { return cBOTHBothOutKeyword_2_0; }
	}
	public class InputStreamElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.InputStream");
		private final EnumLiteralDeclaration cSTDINEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cSTDINStdinKeyword_0 = (Keyword)cSTDINEnumLiteralDeclaration.eContents().get(0);
		
		//enum InputStream:
		//    STDIN = "stdin"
		//;
		public EnumRule getRule() { return rule; }
		
		//STDIN = "stdin"
		public EnumLiteralDeclaration getSTDINEnumLiteralDeclaration() { return cSTDINEnumLiteralDeclaration; }
		
		//"stdin"
		public Keyword getSTDINStdinKeyword_0() { return cSTDINStdinKeyword_0; }
	}
	public class TestRunnerTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.TestRunnerType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJUNIT5EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJUNIT5Junit5Keyword_0_0 = (Keyword)cJUNIT5EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJUNIT4EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJUNIT4Junit4Keyword_1_0 = (Keyword)cJUNIT4EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cJUNIT3EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cJUNIT3Junit3Keyword_2_0 = (Keyword)cJUNIT3EnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TestRunnerType:
		//    JUNIT5 = "junit5" | JUNIT4 = "junit4" | JUNIT3 = "junit3"
		//;
		public EnumRule getRule() { return rule; }
		
		//JUNIT5 = "junit5" | JUNIT4 = "junit4" | JUNIT3 = "junit3"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JUNIT5 = "junit5"
		public EnumLiteralDeclaration getJUNIT5EnumLiteralDeclaration_0() { return cJUNIT5EnumLiteralDeclaration_0; }
		
		//"junit5"
		public Keyword getJUNIT5Junit5Keyword_0_0() { return cJUNIT5Junit5Keyword_0_0; }
		
		//JUNIT4 = "junit4"
		public EnumLiteralDeclaration getJUNIT4EnumLiteralDeclaration_1() { return cJUNIT4EnumLiteralDeclaration_1; }
		
		//"junit4"
		public Keyword getJUNIT4Junit4Keyword_1_0() { return cJUNIT4Junit4Keyword_1_0; }
		
		//JUNIT3 = "junit3"
		public EnumLiteralDeclaration getJUNIT3EnumLiteralDeclaration_2() { return cJUNIT3EnumLiteralDeclaration_2; }
		
		//"junit3"
		public Keyword getJUNIT3Junit3Keyword_2_0() { return cJUNIT3Junit3Keyword_2_0; }
	}
	
	private final LCModelElements pLCModel;
	private final LaunchConfigElements pLaunchConfig;
	private final WorkspaceElements pWorkspace;
	private final WorkingDirElements pWorkingDir;
	private final MainProjectElements pMainProject;
	private final MainTypeElements pMainType;
	private final AddPluginElements pAddPlugin;
	private final AddFeatureElements pAddFeature;
	private final ContentProviderProductElements pContentProviderProduct;
	private final IgnorePluginElements pIgnorePlugin;
	private final VmArgumentElements pVmArgument;
	private final ProgramArgumentElements pProgramArgument;
	private final EnvironmentVariableElements pEnvironmentVariable;
	private final ApplicationExtPointElements pApplicationExtPoint;
	private final ProductExtPointElements pProductExtPoint;
	private final FavoritesElements pFavorites;
	private final RedirectElements pRedirect;
	private final ExecutionEnvironmentElements pExecutionEnvironment;
	private final ConfigIniTemplateElements pConfigIniTemplate;
	private final TraceEnablementElements pTraceEnablement;
	private final JavaMainSearchElements pJavaMainSearch;
	private final RapServletConfigElements pRapServletConfig;
	private final PathElements pPath;
	private final ExistingPathElements pExistingPath;
	private final AnyPathElements pAnyPath;
	private final PluginWithVersionAndStartLevelElements pPluginWithVersionAndStartLevel;
	private final PluginWithVersionElements pPluginWithVersion;
	private final FeatureWithVersionElements pFeatureWithVersion;
	private final ProjectElements pProject;
	private final JavaMainTypeElements pJavaMainType;
	private final ClearOptionElements pClearOption;
	private final MemoryOptionElements pMemoryOption;
	private final GroupMemberElements pGroupMember;
	private final GroupPostLaunchActionElements pGroupPostLaunchAction;
	private final GroupPostLaunchDelayElements pGroupPostLaunchDelay;
	private final GroupPostLaunchRegexElements pGroupPostLaunchRegex;
	private final GroupPostLaunchWaitElements pGroupPostLaunchWait;
	private final StringWithVariablesElements pStringWithVariables;
	private final TestConfigElements pTestConfig;
	private final FQNameElements pFQName;
	private final TagsElements pTags;
	private final BrowserLaunchModeElements eBrowserLaunchMode;
	private final LaunchConfigTypeElements eLaunchConfigType;
	private final LaunchModeTypeElements eLaunchModeType;
	private final MemoryUnitElements eMemoryUnit;
	private final OutputStreamElements eOutputStream;
	private final InputStreamElements eInputStream;
	private final TestRunnerTypeElements eTestRunnerType;
	private final TerminalRule tINT;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tID;
	private final TerminalRule tQUALIFIER;
	private final TerminalRule tVERSION;
	private final TerminalRule tEQ;
	private final TerminalRule tBLOCK_BEGIN;
	private final TerminalRule tBLOCK_END;
	private final TerminalRule tBRACKET_OPEN;
	private final TerminalRule tBRACKET_CLOSE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LcDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLCModel = new LCModelElements();
		this.pLaunchConfig = new LaunchConfigElements();
		this.pWorkspace = new WorkspaceElements();
		this.pWorkingDir = new WorkingDirElements();
		this.pMainProject = new MainProjectElements();
		this.pMainType = new MainTypeElements();
		this.pAddPlugin = new AddPluginElements();
		this.pAddFeature = new AddFeatureElements();
		this.pContentProviderProduct = new ContentProviderProductElements();
		this.pIgnorePlugin = new IgnorePluginElements();
		this.pVmArgument = new VmArgumentElements();
		this.pProgramArgument = new ProgramArgumentElements();
		this.pEnvironmentVariable = new EnvironmentVariableElements();
		this.pApplicationExtPoint = new ApplicationExtPointElements();
		this.pProductExtPoint = new ProductExtPointElements();
		this.pFavorites = new FavoritesElements();
		this.pRedirect = new RedirectElements();
		this.pExecutionEnvironment = new ExecutionEnvironmentElements();
		this.pConfigIniTemplate = new ConfigIniTemplateElements();
		this.pTraceEnablement = new TraceEnablementElements();
		this.pJavaMainSearch = new JavaMainSearchElements();
		this.pRapServletConfig = new RapServletConfigElements();
		this.pPath = new PathElements();
		this.pExistingPath = new ExistingPathElements();
		this.pAnyPath = new AnyPathElements();
		this.pPluginWithVersionAndStartLevel = new PluginWithVersionAndStartLevelElements();
		this.pPluginWithVersion = new PluginWithVersionElements();
		this.pFeatureWithVersion = new FeatureWithVersionElements();
		this.pProject = new ProjectElements();
		this.pJavaMainType = new JavaMainTypeElements();
		this.pClearOption = new ClearOptionElements();
		this.pMemoryOption = new MemoryOptionElements();
		this.pGroupMember = new GroupMemberElements();
		this.pGroupPostLaunchAction = new GroupPostLaunchActionElements();
		this.pGroupPostLaunchDelay = new GroupPostLaunchDelayElements();
		this.pGroupPostLaunchRegex = new GroupPostLaunchRegexElements();
		this.pGroupPostLaunchWait = new GroupPostLaunchWaitElements();
		this.pStringWithVariables = new StringWithVariablesElements();
		this.pTestConfig = new TestConfigElements();
		this.pFQName = new FQNameElements();
		this.pTags = new TagsElements();
		this.eBrowserLaunchMode = new BrowserLaunchModeElements();
		this.eLaunchConfigType = new LaunchConfigTypeElements();
		this.eLaunchModeType = new LaunchModeTypeElements();
		this.eMemoryUnit = new MemoryUnitElements();
		this.eOutputStream = new OutputStreamElements();
		this.eInputStream = new InputStreamElements();
		this.eTestRunnerType = new TestRunnerTypeElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.INT");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BOOLEAN");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.ID");
		this.tQUALIFIER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.QUALIFIER");
		this.tVERSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.VERSION");
		this.tEQ = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.EQ");
		this.tBLOCK_BEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BLOCK_BEGIN");
		this.tBLOCK_END = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BLOCK_END");
		this.tBRACKET_OPEN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BRACKET_OPEN");
		this.tBRACKET_CLOSE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.wamas.ide.launching.LcDsl.BRACKET_CLOSE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.wamas.ide.launching.LcDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	///**
	// * TODO: The language is still missing some things that could be set:
	// *
	// * Java:
	// *   - additional classpath entries (low prio)
	// *   - additional source lookup (low prio)
	// *
	// * Eclipse,Rap:
	// *   - config location (low prio)
	// *   - default start level & autostart
	// *
	// * How to support different launch config types - some generic attribute support?
	// * Or really implement support for each type separately (probably the best experience).
	// */
	//LCModel:
	//    configurations+=LaunchConfig*
	//;
	public LCModelElements getLCModelAccess() {
		return pLCModel;
	}
	
	public ParserRule getLCModelRule() {
		return getLCModelAccess().getRule();
	}
	
	///**
	// * explicit = explicitly defined plug-in list. no auto-resolve of plug-ins.
	// * manual = manually generated through context menu only. no automatic build.
	// * foreground = don't launch in background, but rather block
	// * no-console = don't allocate a console (no stdin then)
	// * no-validate = don't validate plugins prior to launch
	// * sw-install-allowed = allow software installation in eclipse config
	// * replace-env = replace environment instead of appending variables
	// */
	//LaunchConfig:
	//    ((explicit?='explicit')? // Eclipse, JUnit-Plugin, SWTBot, RAP
	//        & (manual?='manual')? // All
	//        & (abstract?='abstract')? // All
	//        & (foreground?='foreground')? // All
	//        & (noConsole?='no-console')? // All but Groups
	//        & (noValidate?='no-validate')? // Eclipse, JUnit-Plugin, SWTBot, RAP
	//        & (swInstallSupport?='sw-install-allowed')? // Eclipse, JUnit-Plugin, SWTBot
	//        & (replaceEnv?='replace-env')? // All but Groups
	//        & (stopInMain?='stop-in-main')? // Java
	//        & (keepRunning?='keep-running')? // JUnit-Plugin, SWTBot
	//        & (runInUiThread?='run-in-ui-thread')? // JUnit-Plugin
	//        & (qualify?='qualified' (BRACKET_OPEN qualifierId=STRING BRACKET_CLOSE)?)? // All - naming
	//    ) type=LaunchConfigType 'configuration' name=FQName
	//    (':' superConfig=[LaunchConfig|FQName])? BLOCK_BEGIN
	//        ( // things that may appear only once
	//            (clears=ClearOption)? // Eclipse, JUnit-Plugin, SWTBot, RAP (partial)
	//            & (workspace=Workspace)? // Eclipse, JUnit-Plugin, SWTBot, RAP
	//            & (workingDir=WorkingDir)? // All but Groups
	//            & (memory=MemoryOption)? // All but Groups
	//            & (mainProject=MainProject)? // Java, JUnit-Plugin, SWTBot
	//            & (mainType=MainType)? // Java
	//            & (application=ApplicationExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
	//            & (product=ProductExtPoint)? // Eclipse, JUnit-Plugin, SWTBot
	//            & (favorites=Favorites)? // All
	//            & (redirect=Redirect)? // All but Groups
	//            & (execEnv=ExecutionEnvironment)? // All but Groups
	//            & (configIniTemplate=ConfigIniTemplate)? // Eclipse, JUnit-Plugin, SWTBot
	//            & (javaMainSearch=JavaMainSearch)? // Java
	//            & (servletConfig=RapServletConfig)? // RAP
	//            & (contentProviderProduct=ContentProviderProduct)? // Eclipse, JUnit-Plugin, SWTBot, RAP
	//            & (test=TestConfig)? // JUnit-Plugin, SWTBot
	//            // things that may appear multiple times
	//            & (plugins+=AddPlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
	//            & (features+=AddFeature)* // Eclipse, JUnit-Plugin, SWTBot, RAP
	//            & (ignore+=IgnorePlugin)* // Eclipse, JUnit-Plugin, SWTBot, RAP
	//            & (groupMembers+=GroupMember)* // Groups                     // TODO: content assist, validation, update on rename
	//            & (vmArgs+=VmArgument)* // All but Groups
	//            & (progArgs+=ProgramArgument)* // All but Groups
	//            & (envVars+=EnvironmentVariable)* // All but Groups
	//            & (traces+=TraceEnablement)* // Eclipse, JUnit-Plugin, SWTBot, RAP
	//        )
	//    BLOCK_END
	//;
	public LaunchConfigElements getLaunchConfigAccess() {
		return pLaunchConfig;
	}
	
	public ParserRule getLaunchConfigRule() {
		return getLaunchConfigAccess().getRule();
	}
	
	//Workspace:
	//    'workspace' workspace=AnyPath ';'
	//;
	public WorkspaceElements getWorkspaceAccess() {
		return pWorkspace;
	}
	
	public ParserRule getWorkspaceRule() {
		return getWorkspaceAccess().getRule();
	}
	
	//WorkingDir:
	//    'working-dir' workingDir=ExistingPath ';'
	//;
	public WorkingDirElements getWorkingDirAccess() {
		return pWorkingDir;
	}
	
	public ParserRule getWorkingDirRule() {
		return getWorkingDirAccess().getRule();
	}
	
	//MainProject:
	//    'project' (self?='self'|project=Project) ';'
	//;
	public MainProjectElements getMainProjectAccess() {
		return pMainProject;
	}
	
	public ParserRule getMainProjectRule() {
		return getMainProjectAccess().getRule();
	}
	
	//MainType:
	//    'main-class' mainClass=JavaMainType ';'
	//;
	public MainTypeElements getMainTypeAccess() {
		return pMainType;
	}
	
	public ParserRule getMainTypeRule() {
		return getMainTypeAccess().getRule();
	}
	
	//AddPlugin:
	//    (optional?='optional')? 'plugin' plugin=PluginWithVersionAndStartLevel ';'
	//;
	public AddPluginElements getAddPluginAccess() {
		return pAddPlugin;
	}
	
	public ParserRule getAddPluginRule() {
		return getAddPluginAccess().getRule();
	}
	
	//AddFeature:
	//    (optional?='optional')? 'feature' feature=FeatureWithVersion ';'
	//;
	public AddFeatureElements getAddFeatureAccess() {
		return pAddFeature;
	}
	
	public ParserRule getAddFeatureRule() {
		return getAddFeatureAccess().getRule();
	}
	
	//ContentProviderProduct:
	//    'content-provider' product=ExistingPath ';'
	//;
	public ContentProviderProductElements getContentProviderProductAccess() {
		return pContentProviderProduct;
	}
	
	public ParserRule getContentProviderProductRule() {
		return getContentProviderProductAccess().getRule();
	}
	
	//IgnorePlugin:
	//    'ignore' plugin=PluginWithVersion ';'
	//;
	public IgnorePluginElements getIgnorePluginAccess() {
		return pIgnorePlugin;
	}
	
	public ParserRule getIgnorePluginRule() {
		return getIgnorePluginAccess().getRule();
	}
	
	//VmArgument:
	//    {VmArgument} 'vm-argument' (arguments+=StringWithVariables)* ';'
	//;
	public VmArgumentElements getVmArgumentAccess() {
		return pVmArgument;
	}
	
	public ParserRule getVmArgumentRule() {
		return getVmArgumentAccess().getRule();
	}
	
	//ProgramArgument:
	//    {ProgramArgument} 'argument' (arguments+=StringWithVariables)* ';'
	//;
	public ProgramArgumentElements getProgramArgumentAccess() {
		return pProgramArgument;
	}
	
	public ParserRule getProgramArgumentRule() {
		return getProgramArgumentAccess().getRule();
	}
	
	//EnvironmentVariable:
	//    {EnvironmentVariable} 'environment' name=ID EQ value=StringWithVariables ';'
	//;
	public EnvironmentVariableElements getEnvironmentVariableAccess() {
		return pEnvironmentVariable;
	}
	
	public ParserRule getEnvironmentVariableRule() {
		return getEnvironmentVariableAccess().getRule();
	}
	
	//ApplicationExtPoint:
	//    'application' name = FQName ';'
	//;
	public ApplicationExtPointElements getApplicationExtPointAccess() {
		return pApplicationExtPoint;
	}
	
	public ParserRule getApplicationExtPointRule() {
		return getApplicationExtPointAccess().getRule();
	}
	
	//ProductExtPoint:
	//    'product' name = FQName ';'
	//;
	public ProductExtPointElements getProductExtPointAccess() {
		return pProductExtPoint;
	}
	
	public ParserRule getProductExtPointRule() {
		return getProductExtPointAccess().getRule();
	}
	
	//Favorites:
	//    {Favorites} 'favorite' (types+=LaunchModeType)* ';'
	//;
	public FavoritesElements getFavoritesAccess() {
		return pFavorites;
	}
	
	public ParserRule getFavoritesRule() {
		return getFavoritesAccess().getRule();
	}
	
	//Redirect:
	//    {Redirect} 'redirect' ((outWhich = OutputStream 'to' outFile=AnyPath (noAppend?='!')?)? & (inWhich=InputStream 'from' inFile=ExistingPath)?) ';'
	//;
	public RedirectElements getRedirectAccess() {
		return pRedirect;
	}
	
	public ParserRule getRedirectRule() {
		return getRedirectAccess().getRule();
	}
	
	//ExecutionEnvironment:
	//    'execution-environment' name=STRING ';'
	//;
	public ExecutionEnvironmentElements getExecutionEnvironmentAccess() {
		return pExecutionEnvironment;
	}
	
	public ParserRule getExecutionEnvironmentRule() {
		return getExecutionEnvironmentAccess().getRule();
	}
	
	//ConfigIniTemplate:
	//    'config-ini-template' path=ExistingPath ';'
	//;
	public ConfigIniTemplateElements getConfigIniTemplateAccess() {
		return pConfigIniTemplate;
	}
	
	public ParserRule getConfigIniTemplateRule() {
		return getConfigIniTemplateAccess().getRule();
	}
	
	//TraceEnablement:
	//    'trace' plugin=FQName (what+=STRING)* ';'
	//;
	public TraceEnablementElements getTraceEnablementAccess() {
		return pTraceEnablement;
	}
	
	public ParserRule getTraceEnablementRule() {
		return getTraceEnablementAccess().getRule();
	}
	
	//JavaMainSearch:
	//    {JavaMainSearch} 'search-main' ((system?='system')? & (inherited?='inherited')?) ';'
	//;
	public JavaMainSearchElements getJavaMainSearchAccess() {
		return pJavaMainSearch;
	}
	
	public ParserRule getJavaMainSearchRule() {
		return getJavaMainSearchAccess().getRule();
	}
	
	//RapServletConfig:
	//    'servlet' BLOCK_BEGIN
	//        (
	//            ('path' servletPath=STRING ';')
	//            & ('browser' browserMode=BrowserLaunchMode ';')?
	//            & ('port' serverPort=INT ';')?
	//            & ('session-timeout' sessionTimeout=INT ';')?
	//            & ('context-path' contextPath=STRING ';')?
	//            & ('dev-mode' devMode=BOOLEAN ';')?
	//        )
	//    BLOCK_END
	//;
	public RapServletConfigElements getRapServletConfigAccess() {
		return pRapServletConfig;
	}
	
	public ParserRule getRapServletConfigRule() {
		return getRapServletConfigAccess().getRule();
	}
	
	//Path:
	//    ExistingPath|AnyPath // TODO: content assist? is it possible?
	//;
	public PathElements getPathAccess() {
		return pPath;
	}
	
	public ParserRule getPathRule() {
		return getPathAccess().getRule();
	}
	
	//ExistingPath:
	//    name = StringWithVariables
	//;
	public ExistingPathElements getExistingPathAccess() {
		return pExistingPath;
	}
	
	public ParserRule getExistingPathRule() {
		return getExistingPathAccess().getRule();
	}
	
	//AnyPath:
	//    name = StringWithVariables
	//;
	public AnyPathElements getAnyPathAccess() {
		return pAnyPath;
	}
	
	public ParserRule getAnyPathRule() {
		return getAnyPathAccess().getRule();
	}
	
	//PluginWithVersionAndStartLevel:
	//    plugin = PluginWithVersion ((autoStart?='autostart')? & ('startlevel' startLevel=INT)?)
	//;
	public PluginWithVersionAndStartLevelElements getPluginWithVersionAndStartLevelAccess() {
		return pPluginWithVersionAndStartLevel;
	}
	
	public ParserRule getPluginWithVersionAndStartLevelRule() {
		return getPluginWithVersionAndStartLevelAccess().getRule();
	}
	
	//PluginWithVersion:
	//    name = FQName (version=VERSION)?
	//;
	public PluginWithVersionElements getPluginWithVersionAccess() {
		return pPluginWithVersion;
	}
	
	public ParserRule getPluginWithVersionRule() {
		return getPluginWithVersionAccess().getRule();
	}
	
	//FeatureWithVersion:
	//    name = FQName (version=VERSION)?
	//;
	public FeatureWithVersionElements getFeatureWithVersionAccess() {
		return pFeatureWithVersion;
	}
	
	public ParserRule getFeatureWithVersionRule() {
		return getFeatureWithVersionAccess().getRule();
	}
	
	//Project:
	//    name = FQName
	//;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//JavaMainType:
	//    name = FQName
	//;
	public JavaMainTypeElements getJavaMainTypeAccess() {
		return pJavaMainType;
	}
	
	public ParserRule getJavaMainTypeRule() {
		return getJavaMainTypeAccess().getRule();
	}
	
	//ClearOption:
	//    {ClearOption} 'clear' (((workspace?='workspace' | log?='log') (noAskClear?='!')?)? & (config?='config')?) ';'
	//;
	public ClearOptionElements getClearOptionAccess() {
		return pClearOption;
	}
	
	public ParserRule getClearOptionRule() {
		return getClearOptionAccess().getRule();
	}
	
	//MemoryOption:
	//    {MemoryOption} 'memory' (('min' EQ min=INT minUnit=MemoryUnit)? & ('max' EQ max=INT maxUnit=MemoryUnit)? & ('perm' EQ perm=INT permUnit=MemoryUnit)?) ';'
	//;
	public MemoryOptionElements getMemoryOptionAccess() {
		return pMemoryOption;
	}
	
	public ParserRule getMemoryOptionRule() {
		return getMemoryOptionAccess().getRule();
	}
	
	//GroupMember:
	//    ((type=LaunchModeType)? & (adopt?='adopt')?) 'member' member=[LaunchConfig|FQName] (postAction=GroupPostLaunchAction)? ';'
	//;
	public GroupMemberElements getGroupMemberAccess() {
		return pGroupMember;
	}
	
	public ParserRule getGroupMemberRule() {
		return getGroupMemberAccess().getRule();
	}
	
	//GroupPostLaunchAction:
	//    GroupPostLaunchDelay|GroupPostLaunchRegex|GroupPostLaunchWait
	//;
	public GroupPostLaunchActionElements getGroupPostLaunchActionAccess() {
		return pGroupPostLaunchAction;
	}
	
	public ParserRule getGroupPostLaunchActionRule() {
		return getGroupPostLaunchActionAccess().getRule();
	}
	
	//GroupPostLaunchDelay:
	//    'delay' delay=INT
	//;
	public GroupPostLaunchDelayElements getGroupPostLaunchDelayAccess() {
		return pGroupPostLaunchDelay;
	}
	
	public ParserRule getGroupPostLaunchDelayRule() {
		return getGroupPostLaunchDelayAccess().getRule();
	}
	
	//GroupPostLaunchRegex:
	//    'regex' regex=STRING
	//;
	public GroupPostLaunchRegexElements getGroupPostLaunchRegexAccess() {
		return pGroupPostLaunchRegex;
	}
	
	public ParserRule getGroupPostLaunchRegexRule() {
		return getGroupPostLaunchRegexAccess().getRule();
	}
	
	//GroupPostLaunchWait:
	//    {GroupPostLaunchWait} 'wait'
	//;
	public GroupPostLaunchWaitElements getGroupPostLaunchWaitAccess() {
		return pGroupPostLaunchWait;
	}
	
	public ParserRule getGroupPostLaunchWaitRule() {
		return getGroupPostLaunchWaitAccess().getRule();
	}
	
	//StringWithVariables:
	//    value=STRING
	//;
	public StringWithVariablesElements getStringWithVariablesAccess() {
		return pStringWithVariables;
	}
	
	public ParserRule getStringWithVariablesRule() {
		return getStringWithVariablesAccess().getRule();
	}
	
	//TestConfig:
	//    {TestConfig} 'test' BLOCK_BEGIN
	//        (
	//            ('runner' runner=TestRunnerType ';')?
	//            & ('container' container=STRING ';')?
	//            & ('class' class=FQName ';')?
	//            & ('method' method=STRING ';')?
	//            & ('exclude-tags' excludeTags=Tags ';')?
	//            & ('include-tags' includeTags=Tags ';')?
	//        )
	//    BLOCK_END
	//;
	public TestConfigElements getTestConfigAccess() {
		return pTestConfig;
	}
	
	public ParserRule getTestConfigRule() {
		return getTestConfigAccess().getRule();
	}
	
	///**
	// * A possibly fully qualified name (separated by '.').
	// */
	//FQName:
	//    ID ('.' ID)*
	//;
	public FQNameElements getFQNameAccess() {
		return pFQName;
	}
	
	public ParserRule getFQNameRule() {
		return getFQNameAccess().getRule();
	}
	
	//Tags:
	//    ID (',' ID)*
	//;
	public TagsElements getTagsAccess() {
		return pTags;
	}
	
	public ParserRule getTagsRule() {
		return getTagsAccess().getRule();
	}
	
	//enum BrowserLaunchMode:
	//    INTERNAL='internal' | EXTERNAL = 'external' | NONE = 'none'
	//;
	public BrowserLaunchModeElements getBrowserLaunchModeAccess() {
		return eBrowserLaunchMode;
	}
	
	public EnumRule getBrowserLaunchModeRule() {
		return getBrowserLaunchModeAccess().getRule();
	}
	
	//enum LaunchConfigType:
	//    JAVA = "java" | ECLIPSE = "eclipse" | RAP = "rap" | GROUP = "group" | SWTBOT = "swtbot" | JUNIT_PLUGIN = "junit-plugin"
	//;
	public LaunchConfigTypeElements getLaunchConfigTypeAccess() {
		return eLaunchConfigType;
	}
	
	public EnumRule getLaunchConfigTypeRule() {
		return getLaunchConfigTypeAccess().getRule();
	}
	
	//enum LaunchModeType:
	//    INHERIT = "inherit" | RUN = "run" | DEBUG = "debug" | PROFILE = "profile" | COVERAGE = "coverage"
	//;
	public LaunchModeTypeElements getLaunchModeTypeAccess() {
		return eLaunchModeType;
	}
	
	public EnumRule getLaunchModeTypeRule() {
		return getLaunchModeTypeAccess().getRule();
	}
	
	//enum MemoryUnit:
	//    MB = 'M' | MB = 'mb' | MB = 'MB' | MB = 'm' |
	//    GB = 'G' | GB = 'gb' | GB = 'GB' | GB = 'g'
	//;
	public MemoryUnitElements getMemoryUnitAccess() {
		return eMemoryUnit;
	}
	
	public EnumRule getMemoryUnitRule() {
		return getMemoryUnitAccess().getRule();
	}
	
	//enum OutputStream:
	//    STDOUT = "stdout" | STDERR = "stderr" | BOTH = "both-out"
	//;
	public OutputStreamElements getOutputStreamAccess() {
		return eOutputStream;
	}
	
	public EnumRule getOutputStreamRule() {
		return getOutputStreamAccess().getRule();
	}
	
	//enum InputStream:
	//    STDIN = "stdin"
	//;
	public InputStreamElements getInputStreamAccess() {
		return eInputStream;
	}
	
	public EnumRule getInputStreamRule() {
		return getInputStreamAccess().getRule();
	}
	
	//enum TestRunnerType:
	//    JUNIT5 = "junit5" | JUNIT4 = "junit4" | JUNIT3 = "junit3"
	//;
	public TestRunnerTypeElements getTestRunnerTypeAccess() {
		return eTestRunnerType;
	}
	
	public EnumRule getTestRunnerTypeRule() {
		return getTestRunnerTypeAccess().getRule();
	}
	
	//@Override
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal BOOLEAN returns ecore::EBoolean: ('true' | 'false');
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//@Override
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('.'? ('a'..'z'|'A'..'Z'|'^'|'_'|'-'|'0'..'9'))*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal QUALIFIER: ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;
	public TerminalRule getQUALIFIERRule() {
		return tQUALIFIER;
	}
	
	//terminal VERSION: INT (('.' INT) (('.' INT) ('.' QUALIFIER)?)?)?;
	public TerminalRule getVERSIONRule() {
		return tVERSION;
	}
	
	//terminal EQ: '=';
	public TerminalRule getEQRule() {
		return tEQ;
	}
	
	//terminal BLOCK_BEGIN: '{';
	public TerminalRule getBLOCK_BEGINRule() {
		return tBLOCK_BEGIN;
	}
	
	//terminal BLOCK_END: '}';
	public TerminalRule getBLOCK_ENDRule() {
		return tBLOCK_END;
	}
	
	//terminal BRACKET_OPEN: '(';
	public TerminalRule getBRACKET_OPENRule() {
		return tBRACKET_OPEN;
	}
	
	//terminal BRACKET_CLOSE: ')';
	public TerminalRule getBRACKET_CLOSERule() {
		return tBRACKET_CLOSE;
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
