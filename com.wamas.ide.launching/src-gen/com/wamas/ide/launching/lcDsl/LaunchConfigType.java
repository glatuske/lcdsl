/**
 * generated by Xtext 2.28.0
 */
package com.wamas.ide.launching.lcDsl;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Launch Config Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.wamas.ide.launching.lcDsl.LcDslPackage#getLaunchConfigType()
 * @model
 * @generated
 */
public enum LaunchConfigType implements Enumerator
{
  /**
   * The '<em><b>JAVA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JAVA_VALUE
   * @generated
   * @ordered
   */
  JAVA(0, "JAVA", "java"),

  /**
   * The '<em><b>ECLIPSE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ECLIPSE_VALUE
   * @generated
   * @ordered
   */
  ECLIPSE(1, "ECLIPSE", "eclipse"),

  /**
   * The '<em><b>RAP</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RAP_VALUE
   * @generated
   * @ordered
   */
  RAP(2, "RAP", "rap"),

  /**
   * The '<em><b>GROUP</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GROUP_VALUE
   * @generated
   * @ordered
   */
  GROUP(3, "GROUP", "group"),

  /**
   * The '<em><b>SWTBOT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SWTBOT_VALUE
   * @generated
   * @ordered
   */
  SWTBOT(4, "SWTBOT", "swtbot"),

  /**
   * The '<em><b>JUNIT PLUGIN</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JUNIT_PLUGIN_VALUE
   * @generated
   * @ordered
   */
  JUNIT_PLUGIN(5, "JUNIT_PLUGIN", "junit-plugin");

  /**
   * The '<em><b>JAVA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JAVA
   * @model literal="java"
   * @generated
   * @ordered
   */
  public static final int JAVA_VALUE = 0;

  /**
   * The '<em><b>ECLIPSE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ECLIPSE
   * @model literal="eclipse"
   * @generated
   * @ordered
   */
  public static final int ECLIPSE_VALUE = 1;

  /**
   * The '<em><b>RAP</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RAP
   * @model literal="rap"
   * @generated
   * @ordered
   */
  public static final int RAP_VALUE = 2;

  /**
   * The '<em><b>GROUP</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GROUP
   * @model literal="group"
   * @generated
   * @ordered
   */
  public static final int GROUP_VALUE = 3;

  /**
   * The '<em><b>SWTBOT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SWTBOT
   * @model literal="swtbot"
   * @generated
   * @ordered
   */
  public static final int SWTBOT_VALUE = 4;

  /**
   * The '<em><b>JUNIT PLUGIN</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JUNIT_PLUGIN
   * @model literal="junit-plugin"
   * @generated
   * @ordered
   */
  public static final int JUNIT_PLUGIN_VALUE = 5;

  /**
   * An array of all the '<em><b>Launch Config Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final LaunchConfigType[] VALUES_ARRAY =
    new LaunchConfigType[]
    {
      JAVA,
      ECLIPSE,
      RAP,
      GROUP,
      SWTBOT,
      JUNIT_PLUGIN,
    };

  /**
   * A public read-only list of all the '<em><b>Launch Config Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<LaunchConfigType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Launch Config Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LaunchConfigType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LaunchConfigType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Launch Config Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LaunchConfigType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LaunchConfigType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Launch Config Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LaunchConfigType get(int value)
  {
    switch (value)
    {
      case JAVA_VALUE: return JAVA;
      case ECLIPSE_VALUE: return ECLIPSE;
      case RAP_VALUE: return RAP;
      case GROUP_VALUE: return GROUP;
      case SWTBOT_VALUE: return SWTBOT;
      case JUNIT_PLUGIN_VALUE: return JUNIT_PLUGIN;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private LaunchConfigType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //LaunchConfigType
