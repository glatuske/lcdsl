/**
 * generated by Xtext 2.28.0
 */
package com.wamas.ide.launching.lcDsl.impl;

import com.wamas.ide.launching.lcDsl.JavaMainType;
import com.wamas.ide.launching.lcDsl.LcDslPackage;
import com.wamas.ide.launching.lcDsl.MainType;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Main Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.wamas.ide.launching.lcDsl.impl.MainTypeImpl#getMainClass <em>Main Class</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MainTypeImpl extends MinimalEObjectImpl.Container implements MainType
{
  /**
   * The cached value of the '{@link #getMainClass() <em>Main Class</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMainClass()
   * @generated
   * @ordered
   */
  protected JavaMainType mainClass;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MainTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LcDslPackage.Literals.MAIN_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaMainType getMainClass()
  {
    return mainClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMainClass(JavaMainType newMainClass, NotificationChain msgs)
  {
    JavaMainType oldMainClass = mainClass;
    mainClass = newMainClass;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LcDslPackage.MAIN_TYPE__MAIN_CLASS, oldMainClass, newMainClass);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMainClass(JavaMainType newMainClass)
  {
    if (newMainClass != mainClass)
    {
      NotificationChain msgs = null;
      if (mainClass != null)
        msgs = ((InternalEObject)mainClass).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LcDslPackage.MAIN_TYPE__MAIN_CLASS, null, msgs);
      if (newMainClass != null)
        msgs = ((InternalEObject)newMainClass).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LcDslPackage.MAIN_TYPE__MAIN_CLASS, null, msgs);
      msgs = basicSetMainClass(newMainClass, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LcDslPackage.MAIN_TYPE__MAIN_CLASS, newMainClass, newMainClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LcDslPackage.MAIN_TYPE__MAIN_CLASS:
        return basicSetMainClass(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LcDslPackage.MAIN_TYPE__MAIN_CLASS:
        return getMainClass();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LcDslPackage.MAIN_TYPE__MAIN_CLASS:
        setMainClass((JavaMainType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LcDslPackage.MAIN_TYPE__MAIN_CLASS:
        setMainClass((JavaMainType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LcDslPackage.MAIN_TYPE__MAIN_CLASS:
        return mainClass != null;
    }
    return super.eIsSet(featureID);
  }

} //MainTypeImpl
